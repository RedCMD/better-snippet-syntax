- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: /*
  scopesBegin:
    - comment.block.json.comments
  scopes:
    - punctuation.definition.comment.json.comments
- source: '    // Place your snippets for JavaScript here. Each snippet is defined under a snippet name and has a prefix, body and '
- source: '    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:'
- source: '    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the '
- source: '    // same ids are connected.'
- source: '    // Example:'
- source: '    "Print to console": {'
- source: '        "prefix": "log",'
- source: '        "body": ['
- source: '            "console.log(''$1'');",'
- source: '            "$2"'
- source: '        ],'
- source: '        "description": "Log output to console"'
- source: '    }'
- source: '*/'
  scopes:
    - punctuation.definition.comment.json.comments
  scopesEnd:
    - comment.block.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: '1'
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: no1
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: '2'
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: no2
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: '3'
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: no3
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopesBegin:
    - constant.character.escape.json.comments
- source: \\
  scopesEnd:
    - constant.character.escape.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \\'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: '4'
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: no4
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \\'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: '5'
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: no5
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopesBegin:
    - constant.character.escape.json.comments
- source: \\
  scopesEnd:
    - constant.character.escape.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: '6'
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: no6
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: '1.1'
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: no2.1
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: $
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: '1'
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' $1'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: '2.2'
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: no2.2
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: '3.3'
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: no2.3
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: $
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: '1'
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \$1'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: '4.4'
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: no2.4
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \\'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: '5.5'
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: no2.5
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: $
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: '1'
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: '6.6'
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: no2.6
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \\\ and special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: any1
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: any1
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: $
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' $ and special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: any2
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: any2
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \$ and special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: any3
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: any3
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: $
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \$ and special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: any2.1
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: any2.1
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: abra
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '1'
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \$ and abra is special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: any3.1
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: any3.1
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: $
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: abra
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '1'
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \$ and abra is special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: any3.2
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: any3.2
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: abra
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '1'
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \\$ and abra is special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: any3.3
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: any3.3
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
- source: '1'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \\$$ 1'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: d1
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: d1
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' $'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: d2
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: d2
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' $$'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: d3
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: d3
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: $
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' $'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: d4
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: d4
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \$'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: d5
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: d5
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: $
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \$'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: d1.1
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: d1.1
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: d2.1
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: d2.1
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' $ special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: d3.1
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: d3.1
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: $
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: '1'
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' $'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: d4.1
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: d4.1
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \$'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: d5.1
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: d5.1
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: $
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: '1'
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \$'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: any4
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: any4
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \\'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: any5
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: any5
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: $
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: any6
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: any6
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: '-1.0'
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: n-1.0
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' $ and special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: '-1.1'
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: n-1.1
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: $
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: '-1.2'
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: n-1.2
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: now
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: now
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: (
  scopesBegin:
    - string.quoted.double.json.comments
- source: 'n'
- source: e
- source: w
- source: D
- source: a
- source: t
- source: e
- source: (
- source: )
- source: )
- source: .
- source: g
- source: e
- source: t
- source: T
- source: i
- source: m
- source: e
- source: (
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: s0
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s0
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - string.quoted.double.json.comments
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' ${}'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: s0.1
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s0.1
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - string.quoted.double.json.comments
- source: '{'
- source: ':'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' ${:}'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: s0.2
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s0.2
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - string.quoted.double.json.comments
- source: '{'
- source: ':'
- source: a
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' ${:a}'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: s1
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s1
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - meta.insertion.default.json.comments
  scopes:
    - punctuation.section.insertion.dollar.interpolated.json.comments
    - support.class.insertion.json.comments
- source: '{'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
- source: ':'
  scopesBegin:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '}'
  scopesEnd:
    - meta.insertion.default.json.comments
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: s2
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s2
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - string.quoted.double.json.comments
- source: '{'
- source: '0'
- source: ':'
  scopesEnd:
    - string.quoted.double.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: '}'
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' ${0:}'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: s3
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s3
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - meta.insertion.default.json.comments
  scopes:
    - punctuation.section.insertion.dollar.interpolated.json.comments
    - support.class.insertion.json.comments
- source: '{'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
- source: ':'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.default.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: '}'
  scopes:
    - meta.insertion.default.json.comments
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \ and special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: s4
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s4
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - string.quoted.double.json.comments
- source: '{'
- source: '0'
- source: ':'
  scopesEnd:
    - string.quoted.double.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: '}'
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' ${0:\}'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: s5
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s5
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - meta.insertion.default.json.comments
  scopes:
    - punctuation.section.insertion.dollar.interpolated.json.comments
    - support.class.insertion.json.comments
- source: '{'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
- source: ':'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.default.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: '}'
  scopes:
    - meta.insertion.default.json.comments
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \\ and special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: s6
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s6
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - meta.insertion.default.json.comments
  scopes:
    - punctuation.section.insertion.dollar.interpolated.json.comments
    - support.class.insertion.json.comments
- source: '{'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
- source: ':'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.default.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: a
  scopes:
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - meta.insertion.default.json.comments
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' => \\a and special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: s7
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s7
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - meta.insertion.default.json.comments
  scopes:
    - punctuation.section.insertion.dollar.interpolated.json.comments
    - support.class.insertion.json.comments
- source: '{'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
- source: ':'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.default.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: '}'
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopesBegin:
    - constant.character.escape.json.comments
- source: \\
  scopesEnd:
    - constant.character.escape.json.comments
- source: a
  scopes:
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - meta.insertion.default.json.comments
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' => }\\a and special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: s8
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s8
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - meta.insertion.default.json.comments
  scopes:
    - punctuation.section.insertion.dollar.interpolated.json.comments
    - support.class.insertion.json.comments
- source: '{'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
- source: ':'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.default.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: '}'
  scopes:
    - meta.insertion.default.json.comments
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopesBegin:
    - constant.character.escape.json.comments
- source: \\
  scopesEnd:
    - constant.character.escape.json.comments
- source: a
  scopes:
    - string.quoted.double.json.comments
- source: '}'
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' => \\\a} and first slash special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: s9
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s9
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - meta.insertion.default.json.comments
  scopes:
    - punctuation.section.insertion.dollar.interpolated.json.comments
    - support.class.insertion.json.comments
- source: '{'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
- source: ':'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.default.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: a
  scopes:
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - meta.insertion.default.json.comments
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \a and special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: s10
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s10
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - meta.insertion.default.json.comments
  scopes:
    - punctuation.section.insertion.dollar.interpolated.json.comments
    - support.class.insertion.json.comments
- source: '{'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
- source: ':'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.default.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: a
  scopes:
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - meta.insertion.default.json.comments
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' \a and special'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: s11
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s11
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - meta.insertion.default.json.comments
  scopes:
    - punctuation.section.insertion.dollar.interpolated.json.comments
    - support.class.insertion.json.comments
- source: '{'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
- source: ':'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.default.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - meta.insertion.default.json.comments
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' $'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: s12
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s12
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - meta.insertion.default.json.comments
  scopes:
    - punctuation.section.insertion.dollar.interpolated.json.comments
    - support.class.insertion.json.comments
- source: '{'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
- source: ':'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.default.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: $
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: '}'
  scopes:
    - meta.insertion.default.json.comments
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' $'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: s13
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s13
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - meta.insertion.default.json.comments
  scopes:
    - punctuation.section.insertion.dollar.interpolated.json.comments
    - support.class.insertion.json.comments
- source: '{'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
- source: ':'
  scopes:
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.default.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - meta.insertion.default.json.comments
    - punctuation.section.insertion.bracket.json.comments
    - support.class.insertion.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' $'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: now0.0
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: now
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: 'n'
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' => \n'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: now0.1
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: now
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: 'n'
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' => \n'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: now0.2
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: now
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: 'n'
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' => \n'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: now1.1
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: now
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: $
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: '1'
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' => $1'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: now1.2
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: now
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' => \'
  scopesEnd:
    - comment.line.double-slash.js
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: now5
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: now
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \\
  scopesBegin:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
  scopes:
    - punctuation.section.insertion.escape.escaper.json.comments
    - comment.block.json.comments
    - punctuation.definition.comment.insertion.escape.json.comments
- source: '}'
  scopesEnd:
    - punctuation.section.insertion.escape.escapee.json.comments
    - string.regexp.insertion.escape.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: deno_hashbang
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: deno_hashbang
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '#'
  scopesBegin:
    - string.quoted.double.json.comments
- source: '!'
- source: /
- source: u
- source: s
- source: r
- source: /
- source: b
- source: i
- source: 'n'
- source: /
- source: e
- source: 'n'
- source: v
- source: s
- source: h
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: \"
  scopesBegin:
    - constant.character.escape.json.comments
- source: \\
- source: \"
- source: \"
  scopesEnd:
    - constant.character.escape.json.comments
- source: ','
  scopesBegin:
    - string.quoted.double.json.comments
- source: '`'
- source: $
- source: $
- source: (
- source: e
- source: c
- source: h
- source: o
- source: '-'
- source: '-'
- source: '%'
- source: ''''
- source: '|'
- source: o
- source: u
- source: t
- source: '-'
- source: 'n'
- source: u
- source: l
- source: l
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: '>'
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: 'null'
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: f
- source: u
- source: 'n'
- source: c
- source: t
- source: i
- source: o
- source: 'n'
- source: ':'
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: f
- source: u
- source: 'n'
- source: c
- source: t
- source: i
- source: o
- source: 'n'
- source: d
- source: v
- source: '{'
- source: <
- source: '#'
- source: $
- source: $
- source: '{'
- source: /
- source: '*'
- source: ''''
- source: '>'
- source: /
- source: d
- source: e
- source: v
- source: /
- source: 'n'
- source: u
- source: l
- source: l
- source: )
- source: '`'
- source: '2'
- source: '>'
- source: /
- source: d
- source: e
- source: v
- source: /
- source: 'n'
- source: u
- source: l
- source: l
- source: ;
- source: d
- source: v
- source: (
- source: )
- source: '{'
- source: '#'
- source: '>'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: e
  scopesBegin:
    - string.quoted.double.json.comments
- source: c
- source: h
- source: o
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: '1'
  scopesBegin:
    - string.quoted.double.json.comments
- source: .
- source: '2'
- source: '2'
- source: .
- source: '0'
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: ':'
- source: '-'
- source: '-'
- source: '%'
- source: ''''
- source: '|'
- source: o
- source: u
- source: t
- source: '-'
- source: 'n'
- source: u
- source: l
- source: l
- source: <
- source: '#'
- source: ''''
- source: ;
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: v
- source: '='
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
- source: (
- source: d
- source: v
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: d
- source: '='
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: HOME
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: /
  scopesBegin:
    - string.quoted.double.json.comments
- source: .
- source: d
- source: e
- source: 'n'
- source: o
- source: /
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: v
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: /
  scopesBegin:
    - string.quoted.double.json.comments
- source: b
- source: i
- source: 'n'
- source: /
- source: d
- source: e
- source: 'n'
- source: o
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: i
- source: f
- source: '['
- source: '-'
- source: x
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: d
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ']'
  scopesBegin:
    - string.quoted.double.json.comments
- source: ;
- source: t
- source: h
- source: e
- source: 'n'
- source: e
- source: x
- source: e
- source: c
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: d
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: r
  scopesBegin:
    - string.quoted.double.json.comments
- source: u
- source: 'n'
- source: '-'
- source: q
- source: '-'
- source: A
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopesBegin:
    - constant.character.escape.json.comments
- source: \"
  scopesEnd:
    - constant.character.escape.json.comments
- source: $
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
- source: '@'
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: l
- source: i
- source: f
- source: '['
- source: '-'
- source: f
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: d
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ']'
  scopesBegin:
    - string.quoted.double.json.comments
- source: ;
- source: t
- source: h
- source: e
- source: 'n'
- source: c
- source: h
- source: m
- source: o
- source: d
- source: +
- source: x
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: d
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: '&'
  scopesBegin:
    - string.quoted.double.json.comments
- source: '&'
- source: e
- source: x
- source: e
- source: c
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: d
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: r
  scopesBegin:
    - string.quoted.double.json.comments
- source: u
- source: 'n'
- source: '-'
- source: q
- source: '-'
- source: A
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopesBegin:
    - constant.character.escape.json.comments
- source: \"
  scopesEnd:
    - constant.character.escape.json.comments
- source: $
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
- source: '@'
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: f
- source: i
- source: ;
- source: b
- source: i
- source: 'n'
- source: _
- source: d
- source: i
- source: r
- source: '='
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: HOME
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: /
  scopesBegin:
    - string.quoted.double.json.comments
- source: .
- source: d
- source: e
- source: 'n'
- source: o
- source: /
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: v
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: /
  scopesBegin:
    - string.quoted.double.json.comments
- source: b
- source: i
- source: 'n'
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: x
- source: e
- source: '='
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: bin_dir
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: /
  scopesBegin:
    - string.quoted.double.json.comments
- source: d
- source: e
- source: 'n'
- source: o
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: h
- source: a
- source: s
- source: (
- source: )
- source: '{'
- source: c
- source: o
- source: m
- source: m
- source: a
- source: 'n'
- source: d
- source: '-'
- source: v
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '1'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: '>'
  scopesBegin:
    - string.quoted.double.json.comments
- source: /
- source: d
- source: e
- source: v
- source: /
- source: 'n'
- source: u
- source: l
- source: l
- source: ;
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: i
- source: f
- source: '!'
- source: h
- source: a
- source: s
- source: u
- source: 'n'
- source: z
- source: i
- source: p
- source: ;
- source: t
- source: h
- source: e
- source: 'n'
- source: ':'
- source: ;
- source: i
- source: f
- source: '!'
- source: h
- source: a
- source: s
- source: a
- source: p
- source: t
- source: '-'
- source: g
- source: e
- source: t
- source: ;
- source: t
- source: h
- source: e
- source: 'n'
- source: h
- source: a
- source: s
- source: b
- source: r
- source: e
- source: w
- source: '&'
- source: '&'
- source: b
- source: r
- source: e
- source: w
- source: i
- source: 'n'
- source: s
- source: t
- source: a
- source: l
- source: l
- source: u
- source: 'n'
- source: z
- source: i
- source: p
- source: ;
- source: e
- source: l
- source: s
- source: e
- source: i
- source: f
- source: '['
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
- source: (
- source: w
- source: h
- source: o
- source: a
- source: m
- source: i
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: '='
  scopes:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: r
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: o
- source: t
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ']'
  scopesBegin:
    - string.quoted.double.json.comments
- source: ;
- source: t
- source: h
- source: e
- source: 'n'
- source: a
- source: p
- source: t
- source: '-'
- source: g
- source: e
- source: t
- source: i
- source: 'n'
- source: s
- source: t
- source: a
- source: l
- source: l
- source: u
- source: 'n'
- source: z
- source: i
- source: p
- source: '-'
- source: 'y'
- source: ;
- source: e
- source: l
- source: i
- source: f
- source: h
- source: a
- source: s
- source: s
- source: u
- source: d
- source: o
- source: ;
- source: t
- source: h
- source: e
- source: 'n'
- source: e
- source: c
- source: h
- source: o
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: C
  scopesBegin:
    - string.quoted.double.json.comments
- source: a
- source: 'n'
- source: I
- source: i
- source: 'n'
- source: s
- source: t
- source: a
- source: l
- source: l
- source: u
- source: 'n'
- source: z
- source: i
- source: p
- source: f
- source: o
- source: r
- source: 'y'
- source: o
- source: u
- source: '?'
- source: (
- source: i
- source: t
- source: s
- source: r
- source: e
- source: q
- source: u
- source: i
- source: r
- source: e
- source: d
- source: f
- source: o
- source: r
- source: t
- source: h
- source: i
- source: s
- source: c
- source: o
- source: m
- source: m
- source: a
- source: 'n'
- source: d
- source: t
- source: o
- source: w
- source: o
- source: r
- source: k
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: r
- source: e
- source: a
- source: d
- source: A
- source: 'N'
- source: S
- source: W
- source: E
- source: R
- source: ;
- source: e
- source: c
- source: h
- source: o
- source: ;
- source: i
- source: f
- source: '['
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: ANSWER
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: '='
  scopesBegin:
    - string.quoted.double.json.comments
- source: '~'
- source: ^
- source: '['
- source: 'Y'
- source: 'y'
- source: ']'
- source: ']'
- source: ;
- source: t
- source: h
- source: e
- source: 'n'
- source: s
- source: u
- source: d
- source: o
- source: a
- source: p
- source: t
- source: '-'
- source: g
- source: e
- source: t
- source: i
- source: 'n'
- source: s
- source: t
- source: a
- source: l
- source: l
- source: u
- source: 'n'
- source: z
- source: i
- source: p
- source: '-'
- source: 'y'
- source: ;
- source: f
- source: i
- source: ;
- source: e
- source: l
- source: i
- source: f
- source: h
- source: a
- source: s
- source: d
- source: o
- source: a
- source: s
- source: ;
- source: t
- source: h
- source: e
- source: 'n'
- source: e
- source: c
- source: h
- source: o
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: C
  scopesBegin:
    - string.quoted.double.json.comments
- source: a
- source: 'n'
- source: I
- source: i
- source: 'n'
- source: s
- source: t
- source: a
- source: l
- source: l
- source: u
- source: 'n'
- source: z
- source: i
- source: p
- source: f
- source: o
- source: r
- source: 'y'
- source: o
- source: u
- source: '?'
- source: (
- source: i
- source: t
- source: s
- source: r
- source: e
- source: q
- source: u
- source: i
- source: r
- source: e
- source: d
- source: f
- source: o
- source: r
- source: t
- source: h
- source: i
- source: s
- source: c
- source: o
- source: m
- source: m
- source: a
- source: 'n'
- source: d
- source: t
- source: o
- source: w
- source: o
- source: r
- source: k
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: r
- source: e
- source: a
- source: d
- source: A
- source: 'N'
- source: S
- source: W
- source: E
- source: R
- source: ;
- source: e
- source: c
- source: h
- source: o
- source: ;
- source: i
- source: f
- source: '['
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: ANSWER
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: '='
  scopesBegin:
    - string.quoted.double.json.comments
- source: '~'
- source: ^
- source: '['
- source: 'Y'
- source: 'y'
- source: ']'
- source: ']'
- source: ;
- source: t
- source: h
- source: e
- source: 'n'
- source: d
- source: o
- source: a
- source: s
- source: a
- source: p
- source: t
- source: '-'
- source: g
- source: e
- source: t
- source: i
- source: 'n'
- source: s
- source: t
- source: a
- source: l
- source: l
- source: u
- source: 'n'
- source: z
- source: i
- source: p
- source: '-'
- source: 'y'
- source: ;
- source: f
- source: i
- source: ;
- source: f
- source: i
- source: ;
- source: f
- source: i
- source: ;
- source: f
- source: i
- source: ;
- source: i
- source: f
- source: '!'
- source: h
- source: a
- source: s
- source: u
- source: 'n'
- source: z
- source: i
- source: p
- source: ;
- source: t
- source: h
- source: e
- source: 'n'
- source: e
- source: c
- source: h
- source: o
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopesBegin:
    - constant.character.escape.json.comments
- source: \"
  scopesEnd:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: c
- source: h
- source: o
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: S
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: I
- source: c
- source: o
- source: u
- source: l
- source: d
- source: 'n'
- source: ''''
- source: t
- source: f
- source: i
- source: 'n'
- source: d
- source: a
- source: 'n'
- source: ''''
- source: u
- source: 'n'
- source: z
- source: i
- source: p
- source: ''''
- source: c
- source: o
- source: m
- source: m
- source: a
- source: 'n'
- source: d
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: c
- source: h
- source: o
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: A
  scopesBegin:
    - string.quoted.double.json.comments
- source: 'n'
- source: d
- source: I
- source: t
- source: r
- source: i
- source: e
- source: d
- source: t
- source: o
- source: a
- source: u
- source: t
- source: o
- source: i
- source: 'n'
- source: s
- source: t
- source: a
- source: l
- source: l
- source: i
- source: t
- source: ','
- source: b
- source: u
- source: t
- source: i
- source: t
- source: s
- source: e
- source: e
- source: m
- source: s
- source: t
- source: h
- source: a
- source: t
- source: f
- source: a
- source: i
- source: l
- source: e
- source: d
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: c
- source: h
- source: o
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: (
  scopesBegin:
    - string.quoted.double.json.comments
- source: T
- source: h
- source: i
- source: s
- source: s
- source: c
- source: r
- source: i
- source: p
- source: t
- source: 'n'
- source: e
- source: e
- source: d
- source: s
- source: u
- source: 'n'
- source: z
- source: i
- source: p
- source: a
- source: 'n'
- source: d
- source: e
- source: i
- source: t
- source: h
- source: e
- source: r
- source: c
- source: u
- source: r
- source: l
- source: o
- source: r
- source: w
- source: g
- source: e
- source: t
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: c
- source: h
- source: o
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: P
  scopesBegin:
    - string.quoted.double.json.comments
- source: l
- source: e
- source: a
- source: s
- source: e
- source: i
- source: 'n'
- source: s
- source: t
- source: a
- source: l
- source: l
- source: t
- source: h
- source: e
- source: u
- source: 'n'
- source: z
- source: i
- source: p
- source: c
- source: o
- source: m
- source: m
- source: a
- source: 'n'
- source: d
- source: m
- source: a
- source: 'n'
- source: u
- source: a
- source: l
- source: l
- source: 'y'
- source: t
- source: h
- source: e
- source: 'n'
- source: r
- source: e
- source: '-'
- source: r
- source: u
- source: 'n'
- source: t
- source: h
- source: i
- source: s
- source: s
- source: c
- source: r
- source: i
- source: p
- source: t
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: x
- source: i
- source: t
- source: '1'
- source: ;
- source: f
- source: i
- source: ;
- source: i
- source: f
- source: '['
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: OS
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: '='
  scopes:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: W
  scopesBegin:
    - string.quoted.double.json.comments
- source: i
- source: 'n'
- source: d
- source: o
- source: w
- source: s
- source: _
- source: 'N'
- source: T
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ']'
  scopesBegin:
    - string.quoted.double.json.comments
- source: ;
- source: t
- source: h
- source: e
- source: 'n'
- source: t
- source: a
- source: r
- source: g
- source: e
- source: t
- source: '='
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: x
  scopesBegin:
    - string.quoted.double.json.comments
- source: '8'
- source: '6'
- source: _
- source: '6'
- source: '4'
- source: '-'
- source: p
- source: c
- source: '-'
- source: w
- source: i
- source: 'n'
- source: d
- source: o
- source: w
- source: s
- source: '-'
- source: m
- source: s
- source: v
- source: c
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: l
- source: s
- source: e
- source: ':'
- source: ;
- source: c
- source: a
- source: s
- source: e
- source: $
- source: $
- source: (
- source: u
- source: 'n'
- source: a
- source: m
- source: e
- source: '-'
- source: s
- source: m
- source: )
- source: i
- source: 'n'
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: D
  scopesBegin:
    - string.quoted.double.json.comments
- source: a
- source: r
- source: w
- source: i
- source: 'n'
- source: x
- source: '8'
- source: '6'
- source: _
- source: '6'
- source: '4'
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: )
  scopesBegin:
    - string.quoted.double.json.comments
- source: t
- source: a
- source: r
- source: g
- source: e
- source: t
- source: '='
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: x
  scopesBegin:
    - string.quoted.double.json.comments
- source: '8'
- source: '6'
- source: _
- source: '6'
- source: '4'
- source: '-'
- source: a
- source: p
- source: p
- source: l
- source: e
- source: '-'
- source: d
- source: a
- source: r
- source: w
- source: i
- source: 'n'
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: ;
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: D
  scopesBegin:
    - string.quoted.double.json.comments
- source: a
- source: r
- source: w
- source: i
- source: 'n'
- source: a
- source: r
- source: m
- source: '6'
- source: '4'
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: )
  scopesBegin:
    - string.quoted.double.json.comments
- source: t
- source: a
- source: r
- source: g
- source: e
- source: t
- source: '='
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: a
  scopesBegin:
    - string.quoted.double.json.comments
- source: a
- source: r
- source: c
- source: h
- source: '6'
- source: '4'
- source: '-'
- source: a
- source: p
- source: p
- source: l
- source: e
- source: '-'
- source: d
- source: a
- source: r
- source: w
- source: i
- source: 'n'
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: ;
- source: '*'
- source: )
- source: t
- source: a
- source: r
- source: g
- source: e
- source: t
- source: '='
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: x
  scopesBegin:
    - string.quoted.double.json.comments
- source: '8'
- source: '6'
- source: _
- source: '6'
- source: '4'
- source: '-'
- source: u
- source: 'n'
- source: k
- source: 'n'
- source: o
- source: w
- source: 'n'
- source: '-'
- source: l
- source: i
- source: 'n'
- source: u
- source: x
- source: '-'
- source: g
- source: 'n'
- source: u
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: ;
- source: e
- source: s
- source: a
- source: c
- source: ;
- source: f
- source: i
- source: ;
- source: d
- source: e
- source: 'n'
- source: o
- source: _
- source: u
- source: r
- source: i
- source: '='
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: h
  scopesBegin:
    - string.quoted.double.json.comments
- source: t
- source: t
- source: p
- source: s
- source: ':'
- source: /
- source: /
- source: g
- source: i
- source: t
- source: h
- source: u
- source: b
- source: .
- source: c
- source: o
- source: m
- source: /
- source: d
- source: e
- source: 'n'
- source: o
- source: l
- source: a
- source: 'n'
- source: d
- source: /
- source: d
- source: e
- source: 'n'
- source: o
- source: /
- source: r
- source: e
- source: l
- source: e
- source: a
- source: s
- source: e
- source: s
- source: /
- source: d
- source: o
- source: w
- source: 'n'
- source: l
- source: o
- source: a
- source: d
- source: /
- source: v
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: v
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: /
  scopesBegin:
    - string.quoted.double.json.comments
- source: d
- source: e
- source: 'n'
- source: o
- source: '-'
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: target
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: .
  scopesBegin:
    - string.quoted.double.json.comments
- source: z
- source: i
- source: p
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: i
- source: f
- source: '['
- source: '!'
- source: '-'
- source: d
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: bin_dir
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ']'
  scopesBegin:
    - string.quoted.double.json.comments
- source: ;
- source: t
- source: h
- source: e
- source: 'n'
- source: m
- source: k
- source: d
- source: i
- source: r
- source: '-'
- source: p
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: bin_dir
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: f
- source: i
- source: ;
- source: i
- source: f
- source: h
- source: a
- source: s
- source: c
- source: u
- source: r
- source: l
- source: ;
- source: t
- source: h
- source: e
- source: 'n'
- source: c
- source: u
- source: r
- source: l
- source: '-'
- source: '-'
- source: f
- source: a
- source: i
- source: l
- source: '-'
- source: '-'
- source: l
- source: o
- source: c
- source: a
- source: t
- source: i
- source: o
- source: 'n'
- source: '-'
- source: '-'
- source: p
- source: r
- source: o
- source: g
- source: r
- source: e
- source: s
- source: s
- source: '-'
- source: b
- source: a
- source: r
- source: '-'
- source: '-'
- source: o
- source: u
- source: t
- source: p
- source: u
- source: t
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: exe
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: .
  scopesBegin:
    - string.quoted.double.json.comments
- source: z
- source: i
- source: p
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopesBegin:
    - constant.character.escape.json.comments
- source: \"
  scopesEnd:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: deno_uri
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: l
- source: i
- source: f
- source: h
- source: a
- source: s
- source: w
- source: g
- source: e
- source: t
- source: ;
- source: t
- source: h
- source: e
- source: 'n'
- source: w
- source: g
- source: e
- source: t
- source: '-'
- source: '-'
- source: o
- source: u
- source: t
- source: p
- source: u
- source: t
- source: '-'
- source: d
- source: o
- source: c
- source: u
- source: m
- source: e
- source: 'n'
- source: t
- source: '='
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: exe
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: .
  scopesBegin:
    - string.quoted.double.json.comments
- source: z
- source: i
- source: p
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopesBegin:
    - constant.character.escape.json.comments
- source: \"
  scopesEnd:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: deno_uri
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: l
- source: s
- source: e
- source: e
- source: c
- source: h
- source: o
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: H
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: w
- source: d
- source: 'y'
- source: '!'
- source: I
- source: l
- source: o
- source: o
- source: k
- source: e
- source: d
- source: f
- source: o
- source: r
- source: t
- source: h
- source: e
- source: ''''
- source: c
- source: u
- source: r
- source: l
- source: ''''
- source: a
- source: 'n'
- source: d
- source: f
- source: o
- source: r
- source: ''''
- source: w
- source: g
- source: e
- source: t
- source: ''''
- source: c
- source: o
- source: m
- source: m
- source: a
- source: 'n'
- source: d
- source: s
- source: b
- source: u
- source: t
- source: I
- source: d
- source: i
- source: d
- source: 'n'
- source: ''''
- source: t
- source: s
- source: e
- source: e
- source: e
- source: i
- source: t
- source: h
- source: e
- source: r
- source: o
- source: f
- source: t
- source: h
- source: e
- source: m
- source: .
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: c
- source: h
- source: o
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: P
  scopesBegin:
    - string.quoted.double.json.comments
- source: l
- source: e
- source: a
- source: s
- source: e
- source: i
- source: 'n'
- source: s
- source: t
- source: a
- source: l
- source: l
- source: o
- source: 'n'
- source: e
- source: o
- source: f
- source: t
- source: h
- source: e
- source: m
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: c
- source: h
- source: o
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: O
  scopesBegin:
    - string.quoted.double.json.comments
- source: t
- source: h
- source: e
- source: r
- source: w
- source: i
- source: s
- source: e
- source: I
- source: h
- source: a
- source: v
- source: e
- source: 'n'
- source: o
- source: w
- source: a
- source: 'y'
- source: t
- source: o
- source: i
- source: 'n'
- source: s
- source: t
- source: a
- source: l
- source: l
- source: t
- source: h
- source: e
- source: m
- source: i
- source: s
- source: s
- source: i
- source: 'n'
- source: g
- source: d
- source: e
- source: 'n'
- source: o
- source: v
- source: e
- source: r
- source: s
- source: i
- source: o
- source: 'n'
- source: 'n'
- source: e
- source: e
- source: d
- source: e
- source: d
- source: t
- source: o
- source: r
- source: u
- source: 'n'
- source: t
- source: h
- source: i
- source: s
- source: c
- source: o
- source: d
- source: e
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: f
- source: i
- source: ;
- source: u
- source: 'n'
- source: z
- source: i
- source: p
- source: '-'
- source: d
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: bin_dir
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: '-'
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: exe
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: .
  scopesBegin:
    - string.quoted.double.json.comments
- source: z
- source: i
- source: p
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: c
- source: h
- source: m
- source: o
- source: d
- source: +
- source: x
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: exe
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: r
- source: m
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: exe
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: .
  scopesBegin:
    - string.quoted.double.json.comments
- source: z
- source: i
- source: p
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: x
- source: e
- source: c
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: d
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: r
  scopesBegin:
    - string.quoted.double.json.comments
- source: u
- source: 'n'
- source: '-'
- source: q
- source: '-'
- source: A
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopesBegin:
    - constant.character.escape.json.comments
- source: \"
  scopesEnd:
    - constant.character.escape.json.comments
- source: $
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
- source: '@'
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: '#'
- source: '>'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: DenoInstall
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '='
  scopes:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
- source: '{'
- source: H
- source: O
- source: M
- source: E
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: .
  scopesBegin:
    - string.quoted.double.json.comments
- source: d
- source: e
- source: 'n'
- source: o
- source: $
- source: $
- source: (
- source: d
- source: v
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: BinDir
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '='
  scopes:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: DenoInstall
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: b
  scopesBegin:
    - string.quoted.double.json.comments
- source: i
- source: 'n'
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: DenoExe
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '='
  scopes:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: BinDir
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: d
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: 'n'
- source: o
- source: .
- source: e
- source: x
- source: e
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: i
- source: f
- source: (
- source: '-'
- source: 'n'
- source: o
- source: t
- source: (
- source: T
- source: e
- source: s
- source: t
- source: '-'
- source: P
- source: a
- source: t
- source: h
- source: '-'
- source: P
- source: a
- source: t
- source: h
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: DenoExe
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: '-'
  scopesBegin:
    - string.quoted.double.json.comments
- source: P
- source: a
- source: t
- source: h
- source: T
- source: 'y'
- source: p
- source: e
- source: L
- source: e
- source: a
- source: f
- source: )
- source: )
- source: '{'
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: DenoZip
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '='
  scopes:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: BinDir
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \\
  scopes:
    - constant.character.escape.json.comments
- source: d
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: 'n'
- source: o
- source: .
- source: z
- source: i
- source: p
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: DenoUri
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '='
  scopes:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: h
  scopesBegin:
    - string.quoted.double.json.comments
- source: t
- source: t
- source: p
- source: s
- source: ':'
- source: /
- source: /
- source: g
- source: i
- source: t
- source: h
- source: u
- source: b
- source: .
- source: c
- source: o
- source: m
- source: /
- source: d
- source: e
- source: 'n'
- source: o
- source: l
- source: a
- source: 'n'
- source: d
- source: /
- source: d
- source: e
- source: 'n'
- source: o
- source: /
- source: r
- source: e
- source: l
- source: e
- source: a
- source: s
- source: e
- source: s
- source: /
- source: d
- source: o
- source: w
- source: 'n'
- source: l
- source: o
- source: a
- source: d
- source: /
- source: v
- source: $
- source: $
- source: (
- source: d
- source: v
- source: )
- source: /
- source: d
- source: e
- source: 'n'
- source: o
- source: '-'
- source: x
- source: '8'
- source: '6'
- source: _
- source: '6'
- source: '4'
- source: '-'
- source: p
- source: c
- source: '-'
- source: w
- source: i
- source: 'n'
- source: d
- source: o
- source: w
- source: s
- source: '-'
- source: m
- source: s
- source: v
- source: c
- source: .
- source: z
- source: i
- source: p
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: '['
- source: 'N'
- source: e
- source: t
- source: .
- source: S
- source: e
- source: r
- source: v
- source: i
- source: c
- source: e
- source: P
- source: o
- source: i
- source: 'n'
- source: t
- source: M
- source: a
- source: 'n'
- source: a
- source: g
- source: e
- source: r
- source: ']'
- source: ':'
- source: ':'
- source: S
- source: e
- source: c
- source: u
- source: r
- source: i
- source: t
- source: 'y'
- source: P
- source: r
- source: o
- source: t
- source: o
- source: c
- source: o
- source: l
- source: '='
- source: '['
- source: 'N'
- source: e
- source: t
- source: .
- source: S
- source: e
- source: c
- source: u
- source: r
- source: i
- source: t
- source: 'y'
- source: P
- source: r
- source: o
- source: t
- source: o
- source: c
- source: o
- source: l
- source: T
- source: 'y'
- source: p
- source: e
- source: ']'
- source: ':'
- source: ':'
- source: T
- source: l
- source: s
- source: '1'
- source: '2'
- source: ;
- source: i
- source: f
- source: (
- source: '!'
- source: (
- source: T
- source: e
- source: s
- source: t
- source: '-'
- source: P
- source: a
- source: t
- source: h
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: BinDir
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: )
  scopesBegin:
    - string.quoted.double.json.comments
- source: )
- source: '{'
- source: 'N'
- source: e
- source: w
- source: '-'
- source: I
- source: t
- source: e
- source: m
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: BinDir
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '-'
  scopesBegin:
    - string.quoted.double.json.comments
- source: I
- source: t
- source: e
- source: m
- source: T
- source: 'y'
- source: p
- source: e
- source: D
- source: i
- source: r
- source: e
- source: c
- source: t
- source: o
- source: r
- source: 'y'
- source: '|'
- source: O
- source: u
- source: t
- source: '-'
- source: 'N'
- source: u
- source: l
- source: l
- source: ;
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: c
- source: u
- source: r
- source: l
- source: .
- source: e
- source: x
- source: e
- source: '-'
- source: L
- source: o
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: DenoZip
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: DenoUri
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: t
- source: a
- source: r
- source: .
- source: e
- source: x
- source: e
- source: x
- source: f
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: DenoZip
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '-'
  scopesBegin:
    - string.quoted.double.json.comments
- source: C
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: BinDir
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: R
- source: e
- source: m
- source: o
- source: v
- source: e
- source: '-'
- source: I
- source: t
- source: e
- source: m
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: DenoZip
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: User
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '='
  scopesBegin:
    - string.quoted.double.json.comments
- source: '['
- source: E
- source: 'n'
- source: v
- source: i
- source: r
- source: o
- source: 'n'
- source: m
- source: e
- source: 'n'
- source: t
- source: V
- source: a
- source: r
- source: i
- source: a
- source: b
- source: l
- source: e
- source: T
- source: a
- source: r
- source: g
- source: e
- source: t
- source: ']'
- source: ':'
- source: ':'
- source: U
- source: s
- source: e
- source: r
- source: ;
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: Path
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '='
  scopesBegin:
    - string.quoted.double.json.comments
- source: '['
- source: E
- source: 'n'
- source: v
- source: i
- source: r
- source: o
- source: 'n'
- source: m
- source: e
- source: 'n'
- source: t
- source: ']'
- source: ':'
- source: ':'
- source: G
- source: e
- source: t
- source: E
- source: 'n'
- source: v
- source: i
- source: r
- source: o
- source: 'n'
- source: m
- source: e
- source: 'n'
- source: t
- source: V
- source: a
- source: r
- source: i
- source: a
- source: b
- source: l
- source: e
- source: (
- source: ''''
- source: P
- source: a
- source: t
- source: h
- source: ''''
- source: ','
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: User
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: )
  scopesBegin:
    - string.quoted.double.json.comments
- source: ;
- source: i
- source: f
- source: (
- source: '!'
- source: (
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: Path
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: ;
  scopes:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: .
  scopesBegin:
    - string.quoted.double.json.comments
- source: T
- source: o
- source: L
- source: o
- source: w
- source: e
- source: r
- source: (
- source: )
- source: '-'
- source: l
- source: i
- source: k
- source: e
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: '*'
  scopesBegin:
    - string.quoted.double.json.comments
- source: ;
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: BinDir
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: '*'
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: .
  scopesBegin:
    - string.quoted.double.json.comments
- source: T
- source: o
- source: L
- source: o
- source: w
- source: e
- source: r
- source: (
- source: )
- source: )
- source: )
- source: '{'
- source: '['
- source: E
- source: 'n'
- source: v
- source: i
- source: r
- source: o
- source: 'n'
- source: m
- source: e
- source: 'n'
- source: t
- source: ']'
- source: ':'
- source: ':'
- source: S
- source: e
- source: t
- source: E
- source: 'n'
- source: v
- source: i
- source: r
- source: o
- source: 'n'
- source: m
- source: e
- source: 'n'
- source: t
- source: V
- source: a
- source: r
- source: i
- source: a
- source: b
- source: l
- source: e
- source: (
- source: ''''
- source: P
- source: a
- source: t
- source: h
- source: ''''
- source: ','
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: Path
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: BinDir
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ','
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: User
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: )
  scopesBegin:
    - string.quoted.double.json.comments
- source: ;
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: Env
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: ':'
  scopesBegin:
    - string.quoted.double.json.comments
- source: P
- source: a
- source: t
- source: h
- source: +
- source: '='
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: BinDir
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ;
  scopes:
    - string.quoted.double.json.comments
- source: '}'
- source: '}'
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: '&'
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: DenoExe
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: r
  scopesBegin:
    - string.quoted.double.json.comments
- source: u
- source: 'n'
- source: '-'
- source: q
- source: '-'
- source: A
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: $
  scopes:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: PSCommandPath
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: '@'
  scopesBegin:
    - string.quoted.double.json.comments
- source: a
- source: r
- source: g
- source: s
- source: ;
- source: E
- source: x
- source: i
- source: t
- source: $
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: LastExitCode
  scopes:
    - variable.other.normal.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: '#'
- source: '*'
- source: /
- source: '0'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: '`'
  scopesBegin:
    - string.quoted.double.json.comments
- source: ;
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: /
  scopesBegin:
    - string.quoted.double.json.comments
- source: /
- source: '*'
- source: /
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: '`'
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: forof loop
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: forof
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: f
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: r
- source: (
- source: l
- source: e
- source: t
- source: e
- source: a
- source: c
- source: h
- source: o
- source: f
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: )
  scopesBegin:
    - string.quoted.double.json.comments
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '}'
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: description
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: creates a for loop
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: forentries loop
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: forentries
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: f
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: r
- source: (
- source: c
- source: o
- source: 'n'
- source: s
- source: t
- source: '['
- source: k
- source: e
- source: 'y'
- source: ','
- source: v
- source: a
- source: l
- source: u
- source: e
- source: ']'
- source: o
- source: f
- source: O
- source: b
- source: j
- source: e
- source: c
- source: t
- source: .
- source: e
- source: 'n'
- source: t
- source: r
- source: i
- source: e
- source: s
- source: (
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: )
  scopesBegin:
    - string.quoted.double.json.comments
- source: )
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '}'
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: description
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: creates a for loop
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: import lodash
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: import lodash
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: c
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: 'n'
- source: s
- source: t
- source: _
- source: '='
- source: (
- source: a
- source: w
- source: a
- source: i
- source: t
- source: i
- source: m
- source: p
- source: o
- source: r
- source: t
- source: (
- source: ''''
- source: h
- source: t
- source: t
- source: p
- source: s
- source: ':'
- source: /
- source: /
- source: c
- source: d
- source: 'n'
- source: .
- source: s
- source: k
- source: 'y'
- source: p
- source: a
- source: c
- source: k
- source: .
- source: d
- source: e
- source: v
- source: /
- source: l
- source: o
- source: d
- source: a
- source: s
- source: h
- source: ''''
- source: )
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: import path
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: import path
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: c
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: 'n'
- source: s
- source: t
- source: P
- source: a
- source: t
- source: h
- source: '='
- source: a
- source: w
- source: a
- source: i
- source: t
- source: i
- source: m
- source: p
- source: o
- source: r
- source: t
- source: (
- source: ''''
- source: h
- source: t
- source: t
- source: p
- source: s
- source: ':'
- source: /
- source: /
- source: d
- source: e
- source: 'n'
- source: o
- source: .
- source: l
- source: a
- source: 'n'
- source: d
- source: /
- source: s
- source: t
- source: d
- source: '@'
- source: '0'
- source: .
- source: '1'
- source: '1'
- source: '7'
- source: .
- source: '0'
- source: /
- source: p
- source: a
- source: t
- source: h
- source: /
- source: m
- source: o
- source: d
- source: .
- source: t
- source: s
- source: ''''
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: import itertools
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: import itertools
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: c
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: 'n'
- source: s
- source: t
- source: '{'
- source: e
- source: 'n'
- source: u
- source: m
- source: e
- source: r
- source: a
- source: t
- source: e
- source: ','
- source: p
- source: a
- source: i
- source: r
- source: w
- source: i
- source: s
- source: e
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: '='
  scopesBegin:
    - string.quoted.double.json.comments
- source: a
- source: w
- source: a
- source: i
- source: t
- source: i
- source: m
- source: p
- source: o
- source: r
- source: t
- source: (
- source: ''''
- source: h
- source: t
- source: t
- source: p
- source: s
- source: ':'
- source: /
- source: /
- source: d
- source: e
- source: 'n'
- source: o
- source: .
- source: l
- source: a
- source: 'n'
- source: d
- source: /
- source: x
- source: /
- source: i
- source: t
- source: e
- source: r
- source: t
- source: o
- source: o
- source: l
- source: s
- source: '@'
- source: v
- source: '1'
- source: .
- source: '0'
- source: .
- source: '2'
- source: /
- source: m
- source: o
- source: d
- source: .
- source: t
- source: s
- source: ''''
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: c
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: 'n'
- source: s
- source: t
- source: '{'
- source: z
- source: i
- source: p
- source: ','
- source: u
- source: 'n'
- source: z
- source: i
- source: p
- source: ','
- source: f
- source: l
- source: a
- source: t
- source: t
- source: e
- source: 'n'
- source: D
- source: e
- source: e
- source: p
- source: ':'
- source: f
- source: l
- source: a
- source: t
- source: t
- source: e
- source: 'n'
- source: ','
- source: f
- source: l
- source: a
- source: t
- source: t
- source: e
- source: 'n'
- source: ':'
- source: f
- source: l
- source: a
- source: t
- source: t
- source: e
- source: 'n'
- source: O
- source: 'n'
- source: c
- source: e
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: '='
  scopesBegin:
    - string.quoted.double.json.comments
- source: (
- source: a
- source: w
- source: a
- source: i
- source: t
- source: i
- source: m
- source: p
- source: o
- source: r
- source: t
- source: (
- source: ''''
- source: h
- source: t
- source: t
- source: p
- source: s
- source: ':'
- source: /
- source: /
- source: c
- source: d
- source: 'n'
- source: .
- source: s
- source: k
- source: 'y'
- source: p
- source: a
- source: c
- source: k
- source: .
- source: d
- source: e
- source: v
- source: /
- source: l
- source: o
- source: d
- source: a
- source: s
- source: h
- source: ''''
- source: )
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: csv import
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: csv import
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: c
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: 'n'
- source: s
- source: t
- source: '{'
- source: r
- source: e
- source: a
- source: d
- source: C
- source: S
- source: V
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: '='
  scopesBegin:
    - string.quoted.double.json.comments
- source: a
- source: w
- source: a
- source: i
- source: t
- source: i
- source: m
- source: p
- source: o
- source: r
- source: t
- source: (
- source: ''''
- source: h
- source: t
- source: t
- source: p
- source: s
- source: ':'
- source: /
- source: /
- source: d
- source: e
- source: 'n'
- source: o
- source: .
- source: l
- source: a
- source: 'n'
- source: d
- source: /
- source: x
- source: /
- source: c
- source: s
- source: v
- source: '@'
- source: v
- source: '0'
- source: .
- source: '5'
- source: .
- source: '1'
- source: /
- source: m
- source: o
- source: d
- source: .
- source: t
- source: s
- source: ''''
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: dataframe import
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: dataframe import
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: c
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: 'n'
- source: s
- source: t
- source: '{'
- source: D
- source: a
- source: t
- source: a
- source: F
- source: r
- source: a
- source: m
- source: e
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: '='
  scopesBegin:
    - string.quoted.double.json.comments
- source: (
- source: a
- source: w
- source: a
- source: i
- source: t
- source: i
- source: m
- source: p
- source: o
- source: r
- source: t
- source: (
- source: ''''
- source: h
- source: t
- source: t
- source: p
- source: s
- source: ':'
- source: /
- source: /
- source: c
- source: d
- source: 'n'
- source: .
- source: s
- source: k
- source: 'y'
- source: p
- source: a
- source: c
- source: k
- source: .
- source: d
- source: e
- source: v
- source: /
- source: '@'
- source: '!'
- source: '!'
- source: '!'
- source: '!'
- source: '!'
- source: /
- source: p
- source: o
- source: l
- source: a
- source: r
- source: b
- source: e
- source: a
- source: r
- source: '@'
- source: '1'
- source: .
- source: '0'
- source: .
- source: '2'
- source: ''''
- source: )
- source: )
- source: .
- source: d
- source: e
- source: f
- source: a
- source: u
- source: l
- source: t
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: throw
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: throw
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: t
  scopesBegin:
    - string.quoted.double.json.comments
- source: h
- source: r
- source: o
- source: w
- source: E
- source: r
- source: r
- source: o
- source: r
- source: (
- source: '`'
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '`'
  scopesBegin:
    - string.quoted.double.json.comments
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: description
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: creates a for loop
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: forin loop
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: forin
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: f
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: r
- source: (
- source: l
- source: e
- source: t
- source: e
- source: a
- source: c
- source: h
- source: i
- source: 'n'
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: )
  scopesBegin:
    - string.quoted.double.json.comments
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '}'
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: description
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: creates a for loop
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: forawait loop
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: forawait
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: f
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: r
- source: a
- source: w
- source: a
- source: i
- source: t
- source: (
- source: l
- source: e
- source: t
- source: e
- source: a
- source: c
- source: h
- source: o
- source: f
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: )
  scopesBegin:
    - string.quoted.double.json.comments
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '}'
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: description
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: creates a for await loop
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: async
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: async
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: ;
  scopesBegin:
    - string.quoted.double.json.comments
- source: (
- source: (
- source: a
- source: s
- source: 'y'
- source: 'n'
- source: c
- source: (
- source: )
- source: '='
- source: '>'
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '}'
- source: )
  scopesBegin:
    - string.quoted.double.json.comments
- source: (
- source: )
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: description
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: creates a called async method
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: promise
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: Promise
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: 'n'
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: w
- source: P
- source: r
- source: o
- source: m
- source: i
- source: s
- source: e
- source: (
- source: (
- source: r
- source: e
- source: s
- source: o
- source: l
- source: v
- source: e
- source: ','
- source: r
- source: e
- source: j
- source: e
- source: c
- source: t
- source: )
- source: '='
- source: '>'
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '}'
- source: )
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: description
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: creates a promise
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: Deno
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: Deno
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: D
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: 'n'
- source: o
- source: .
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: jsdoc
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: jsdoc
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: /
  scopesBegin:
    - string.quoted.double.json.comments
- source: '*'
- source: '*'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '*'
  scopesBegin:
    - string.quoted.double.json.comments
- source: F
- source: u
- source: 'n'
- source: c
- source: t
- source: i
- source: o
- source: 'n'
- source: t
- source: h
- source: a
- source: t
- source: d
- source: o
- source: e
- source: s
- source: s
- source: o
- source: m
- source: e
- source: t
- source: h
- source: i
- source: 'n'
- source: g
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '*'
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '*'
  scopesBegin:
    - string.quoted.double.json.comments
- source: '@'
- source: p
- source: a
- source: r
- source: a
- source: m
- source: '{'
- source: O
- source: b
- source: j
- source: e
- source: c
- source: t
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: p
  scopesBegin:
    - string.quoted.double.json.comments
- source: a
- source: r
- source: a
- source: m
- source: e
- source: t
- source: e
- source: r
- source: '1'
- source: '-'
- source: w
- source: h
- source: i
- source: c
- source: h
- source: s
- source: h
- source: o
- source: u
- source: l
- source: d
- source: b
- source: e
- source: a
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '*'
  scopesBegin:
    - string.quoted.double.json.comments
- source: '@'
- source: r
- source: e
- source: t
- source: u
- source: r
- source: 'n'
- source: '{'
- source: B
- source: o
- source: o
- source: l
- source: e
- source: a
- source: 'n'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: t
  scopesBegin:
    - string.quoted.double.json.comments
- source: h
- source: e
- source: o
- source: u
- source: t
- source: p
- source: u
- source: t
- source: i
- source: s
- source: a
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '*'
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '*'
  scopesBegin:
    - string.quoted.double.json.comments
- source: '@'
- source: e
- source: x
- source: a
- source: m
- source: p
- source: l
- source: e
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '*'
  scopesBegin:
    - string.quoted.double.json.comments
- source: d
- source: o
- source: e
- source: s
- source: s
- source: o
- source: m
- source: e
- source: t
- source: h
- source: i
- source: 'n'
- source: g
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '*'
  scopesBegin:
    - string.quoted.double.json.comments
- source: /
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: description
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: creates documentation
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: override the function snippet
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: function
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: f
  scopesBegin:
    - string.quoted.double.json.comments
- source: u
- source: 'n'
- source: c
- source: t
- source: i
- source: o
- source: 'n'
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: description
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: just types function
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: Print to console
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: print
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: c
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: 'n'
- source: s
- source: o
- source: l
- source: e
- source: .
- source: l
- source: o
- source: g
- source: (
- source: '`'
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '`'
  scopesBegin:
    - string.quoted.double.json.comments
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: description
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: Log output to console
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: output a var
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: out
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: c
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: 'n'
- source: s
- source: o
- source: l
- source: e
- source: .
- source: d
- source: e
- source: b
- source: u
- source: g
- source: (
- source: '`'
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: i
  scopesBegin:
    - string.quoted.double.json.comments
- source: s
- source: ':'
- source: '`'
- source: ','
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: )
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: description
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: Debug output to console
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: Show some output
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: show
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s
  scopesBegin:
    - string.quoted.double.json.comments
- source: h
- source: o
- source: w
- source: (
- source: '`'
  scopesEnd:
    - string.quoted.double.json.comments
- source: $
  scopesBegin:
    - meta.insertion.simple.json.comments
  scopes:
    - punctuation.section.insertion.dollar.connected.json.comments
    - support.class.insertion.json.comments
- source: '0'
  scopes:
    - variable.other.normal.numeric.json.comments
    - support.class.insertion.json.comments
  scopesEnd:
    - meta.insertion.simple.json.comments
- source: '`'
  scopesBegin:
    - string.quoted.double.json.comments
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: description
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: Log output using the (custom) show function
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: glob
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: import glob
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: /
  scopesBegin:
    - string.quoted.double.json.comments
- source: /
- source: 'n'
- source: p
- source: m
- source: i
- source: 'n'
- source: s
- source: t
- source: a
- source: l
- source: l
- source: g
- source: l
- source: o
- source: b
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: /
  scopesBegin:
    - string.quoted.double.json.comments
- source: /
- source: c
- source: o
- source: 'n'
- source: s
- source: t
- source: g
- source: l
- source: o
- source: b
- source: '='
- source: r
- source: e
- source: q
- source: u
- source: i
- source: r
- source: e
- source: (
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: g
  scopesBegin:
    - string.quoted.double.json.comments
- source: l
- source: o
- source: b
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: )
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: r
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: s
- source: u
- source: l
- source: t
- source: '='
- source: g
- source: l
- source: o
- source: b
- source: .
- source: s
- source: 'y'
- source: 'n'
- source: c
- source: (
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: '*'
  scopesBegin:
    - string.quoted.double.json.comments
- source: '*'
- source: /
- source: '*'
- source: .
- source: j
- source: s
  scopesEnd:
    - string.quoted.double.json.comments
- source: \"
  scopes:
    - constant.character.escape.json.comments
- source: ','
  scopesBegin:
    - string.quoted.double.json.comments
- source: '{'
- source: d
- source: o
- source: t
- source: ':'
- source: t
- source: r
- source: u
- source: e
- source: ','
- source: 'n'
- source: o
- source: d
- source: i
- source: r
- source: ':'
- source: f
- source: a
- source: l
- source: s
- source: e
- source: ','
- source: i
- source: g
- source: 'n'
- source: o
- source: r
- source: e
- source: ':'
- source: '['
- source: ']'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: )
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: description
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: Find groups of files
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: webassembly
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: import webassembly
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: c
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: 'n'
- source: s
- source: t
- source: e
- source: 'n'
- source: v
- source: '='
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: m
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: m
- source: o
- source: r
- source: 'y'
- source: B
- source: a
- source: s
- source: e
- source: ':'
- source: '0'
- source: ','
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: t
  scopesBegin:
    - string.quoted.double.json.comments
- source: a
- source: b
- source: l
- source: e
- source: B
- source: a
- source: s
- source: e
- source: ':'
- source: '0'
- source: ','
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: m
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: m
- source: o
- source: r
- source: 'y'
- source: ':'
- source: 'n'
- source: e
- source: w
- source: W
- source: e
- source: b
- source: A
- source: s
- source: s
- source: e
- source: m
- source: b
- source: l
- source: 'y'
- source: .
- source: M
- source: e
- source: m
- source: o
- source: r
- source: 'y'
- source: (
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: i
  scopesBegin:
    - string.quoted.double.json.comments
- source: 'n'
- source: i
- source: t
- source: i
- source: a
- source: l
- source: ':'
- source: '2'
- source: '5'
- source: '6'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '}'
- source: )
  scopesBegin:
    - string.quoted.double.json.comments
- source: ','
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: t
  scopesBegin:
    - string.quoted.double.json.comments
- source: a
- source: b
- source: l
- source: e
- source: ':'
- source: 'n'
- source: e
- source: w
- source: W
- source: e
- source: b
- source: A
- source: s
- source: s
- source: e
- source: m
- source: b
- source: l
- source: 'y'
- source: .
- source: T
- source: a
- source: b
- source: l
- source: e
- source: (
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: i
  scopesBegin:
    - string.quoted.double.json.comments
- source: 'n'
- source: i
- source: t
- source: i
- source: a
- source: l
- source: ':'
- source: '0'
- source: ','
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: e
  scopesBegin:
    - string.quoted.double.json.comments
- source: l
- source: e
- source: m
- source: e
- source: 'n'
- source: t
- source: ':'
- source: ''''
- source: a
- source: 'n'
- source: 'y'
- source: f
- source: u
- source: 'n'
- source: c
- source: ''''
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '}'
- source: )
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '}'
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: W
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: b
- source: A
- source: s
- source: s
- source: e
- source: m
- source: b
- source: l
- source: 'y'
- source: .
- source: i
- source: 'n'
- source: s
- source: t
- source: a
- source: 'n'
- source: t
- source: i
- source: a
- source: t
- source: e
- source: (
- source: t
- source: 'y'
- source: p
- source: e
- source: d
- source: A
- source: r
- source: r
- source: a
- source: 'y'
- source: ','
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: e
  scopesBegin:
    - string.quoted.double.json.comments
- source: 'n'
- source: v
- source: ':'
- source: e
- source: 'n'
- source: v
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '}'
- source: )
  scopesBegin:
    - string.quoted.double.json.comments
- source: .
- source: t
- source: h
- source: e
- source: 'n'
- source: (
- source: r
- source: e
- source: s
- source: u
- source: l
- source: t
- source: '='
- source: '>'
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: c
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: 'n'
- source: s
- source: o
- source: l
- source: e
- source: .
- source: l
- source: o
- source: g
- source: (
- source: u
- source: t
- source: i
- source: l
- source: .
- source: i
- source: 'n'
- source: s
- source: p
- source: e
- source: c
- source: t
- source: (
- source: r
- source: e
- source: s
- source: u
- source: l
- source: t
- source: ','
- source: t
- source: r
- source: u
- source: e
- source: ','
- source: '0'
- source: )
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '}'
- source: )
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: description
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: setup a webassembly import
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
    - string.quoted.double.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: proxy
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '{'
  scopesBegin:
    - meta.structure.dictionary.json.comments
  scopes:
    - punctuation.definition.dictionary.begin.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: prefix
- source: '"'
  scopes:
    - punctuation.support.type.property-name.end.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: proxy
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '"'
  scopesBegin:
    - string.json.comments
    - support.type.property-name.json.comments
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
- source: body
- source: '"'
  scopes:
    - punctuation.support.type.property-name.begin.json.comments
  scopesEnd:
    - string.json.comments
    - support.type.property-name.json.comments
- source: ':'
  scopesBegin:
    - meta.structure.dictionary.value.json.comments
  scopes:
    - punctuation.separator.dictionary.key-value.json.comments
- source: '['
  scopesBegin:
    - meta.structure.array.json.comments
  scopes:
    - punctuation.definition.array.begin.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: c
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: 'n'
- source: s
- source: t
- source: o
- source: r
- source: i
- source: g
- source: i
- source: 'n'
- source: a
- source: l
- source: T
- source: h
- source: i
- source: 'n'
- source: g
- source: '='
- source: (
- source: )
- source: '='
- source: '>'
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: c
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: 'n'
- source: s
- source: t
- source: p
- source: r
- source: o
- source: x
- source: 'y'
- source: S
- source: 'y'
- source: m
- source: b
- source: o
- source: l
- source: '='
- source: S
- source: 'y'
- source: m
- source: b
- source: o
- source: l
- source: .
- source: f
- source: o
- source: r
- source: (
- source: ''''
- source: P
- source: r
- source: o
- source: x
- source: 'y'
- source: ''''
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: c
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: 'n'
- source: s
- source: t
- source: t
- source: h
- source: i
- source: s
- source: P
- source: r
- source: o
- source: x
- source: 'y'
- source: S
- source: 'y'
- source: m
- source: b
- source: o
- source: l
- source: '='
- source: S
- source: 'y'
- source: m
- source: b
- source: o
- source: l
- source: (
- source: ''''
- source: t
- source: h
- source: i
- source: s
- source: P
- source: r
- source: o
- source: x
- source: 'y'
- source: ''''
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: /
  scopesBegin:
    - string.quoted.double.json.comments
- source: /
- source: o
- source: r
- source: i
- source: g
- source: i
- source: 'n'
- source: a
- source: l
- source: T
- source: h
- source: i
- source: 'n'
- source: g
- source: '['
- source: S
- source: 'y'
- source: m
- source: b
- source: o
- source: l
- source: .
- source: i
- source: t
- source: e
- source: r
- source: a
- source: t
- source: o
- source: r
- source: ']'
- source: /
- source: /
- source: u
- source: s
- source: e
- source: d
- source: b
- source: 'y'
- source: f
- source: o
- source: r
- source: .
- source: .
- source: o
- source: f
- source: l
- source: o
- source: o
- source: p
- source: s
- source: a
- source: 'n'
- source: d
- source: s
- source: p
- source: r
- source: e
- source: a
- source: d
- source: s
- source: 'y'
- source: 'n'
- source: t
- source: a
- source: x
- source: .
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: /
  scopesBegin:
    - string.quoted.double.json.comments
- source: /
- source: o
- source: r
- source: i
- source: g
- source: i
- source: 'n'
- source: a
- source: l
- source: T
- source: h
- source: i
- source: 'n'
- source: g
- source: '['
- source: S
- source: 'y'
- source: m
- source: b
- source: o
- source: l
- source: .
- source: t
- source: o
- source: P
- source: r
- source: i
- source: m
- source: i
- source: t
- source: i
- source: v
- source: e
- source: ']'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: c
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: 'n'
- source: s
- source: t
- source: p
- source: r
- source: o
- source: x
- source: 'y'
- source: O
- source: b
- source: j
- source: e
- source: c
- source: t
- source: '='
- source: 'n'
- source: e
- source: w
- source: P
- source: r
- source: o
- source: x
- source: 'y'
- source: (
- source: o
- source: r
- source: i
- source: g
- source: i
- source: 'n'
- source: a
- source: l
- source: T
- source: h
- source: i
- source: 'n'
- source: g
- source: ','
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: /
  scopesBegin:
    - string.quoted.double.json.comments
- source: /
- source: O
- source: b
- source: j
- source: e
- source: c
- source: t
- source: .
- source: k
- source: e
- source: 'y'
- source: s
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: o
  scopesBegin:
    - string.quoted.double.json.comments
- source: w
- source: 'n'
- source: K
- source: e
- source: 'y'
- source: s
- source: (
- source: t
- source: a
- source: r
- source: g
- source: e
- source: t
- source: ','
- source: .
- source: .
- source: .
- source: a
- source: r
- source: g
- source: s
- source: )
- source: '{'
- source: r
- source: e
- source: t
- source: u
- source: r
- source: 'n'
- source: R
- source: e
- source: f
- source: l
- source: e
- source: c
- source: t
- source: .
- source: o
- source: w
- source: 'n'
- source: K
- source: e
- source: 'y'
- source: s
- source: (
- source: t
- source: a
- source: r
- source: g
- source: e
- source: t
- source: ','
- source: .
- source: .
- source: .
- source: a
- source: r
- source: g
- source: s
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: ','
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: /
  scopesBegin:
    - string.quoted.double.json.comments
- source: /
- source: f
- source: u
- source: 'n'
- source: c
- source: t
- source: i
- source: o
- source: 'n'
- source: c
- source: a
- source: l
- source: l
- source: (
- source: o
- source: r
- source: i
- source: g
- source: i
- source: 'n'
- source: a
- source: l
- source: v
- source: a
- source: l
- source: u
- source: e
- source: 'n'
- source: e
- source: e
- source: d
- source: s
- source: t
- source: o
- source: b
- source: e
- source: a
- source: f
- source: u
- source: 'n'
- source: c
- source: t
- source: i
- source: o
- source: 'n'
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: a
  scopesBegin:
    - string.quoted.double.json.comments
- source: p
- source: p
- source: l
- source: 'y'
- source: (
- source: o
- source: r
- source: i
- source: g
- source: i
- source: 'n'
- source: a
- source: l
- source: ','
- source: c
- source: o
- source: 'n'
- source: t
- source: e
- source: x
- source: t
- source: ','
- source: .
- source: .
- source: .
- source: a
- source: r
- source: g
- source: s
- source: )
- source: '{'
- source: c
- source: o
- source: 'n'
- source: s
- source: o
- source: l
- source: e
- source: .
- source: l
- source: o
- source: g
- source: (
- source: a
- source: r
- source: g
- source: s
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: ','
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: /
  scopesBegin:
    - string.quoted.double.json.comments
- source: /
- source: 'n'
- source: e
- source: w
- source: o
- source: p
- source: e
- source: r
- source: a
- source: t
- source: o
- source: r
- source: (
- source: o
- source: r
- source: i
- source: g
- source: i
- source: 'n'
- source: a
- source: l
- source: v
- source: a
- source: l
- source: u
- source: e
- source: 'n'
- source: e
- source: e
- source: d
- source: s
- source: t
- source: o
- source: b
- source: e
- source: a
- source: c
- source: l
- source: a
- source: s
- source: s
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: c
  scopesBegin:
    - string.quoted.double.json.comments
- source: o
- source: 'n'
- source: s
- source: t
- source: r
- source: u
- source: c
- source: t
- source: (
- source: o
- source: r
- source: i
- source: g
- source: i
- source: 'n'
- source: a
- source: l
- source: ','
- source: a
- source: r
- source: g
- source: s
- source: ','
- source: o
- source: r
- source: i
- source: g
- source: i
- source: 'n'
- source: a
- source: l
- source: C
- source: o
- source: 'n'
- source: s
- source: t
- source: r
- source: u
- source: c
- source: t
- source: o
- source: r
- source: )
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: ','
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: g
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: t
- source: (
- source: o
- source: r
- source: i
- source: g
- source: i
- source: 'n'
- source: a
- source: l
- source: ','
- source: k
- source: e
- source: 'y'
- source: ','
- source: .
- source: .
- source: .
- source: a
- source: r
- source: g
- source: s
- source: )
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: i
  scopesBegin:
    - string.quoted.double.json.comments
- source: f
- source: (
- source: k
- source: e
- source: 'y'
- source: '='
- source: '='
- source: p
- source: r
- source: o
- source: x
- source: 'y'
- source: S
- source: 'y'
- source: m
- source: b
- source: o
- source: l
- source: '|'
- source: '|'
- source: k
- source: e
- source: 'y'
- source: '='
- source: '='
- source: t
- source: h
- source: i
- source: s
- source: P
- source: r
- source: o
- source: x
- source: 'y'
- source: S
- source: 'y'
- source: m
- source: b
- source: o
- source: l
- source: )
- source: '{'
- source: r
- source: e
- source: t
- source: u
- source: r
- source: 'n'
- source: t
- source: r
- source: u
- source: e
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: r
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: t
- source: u
- source: r
- source: 'n'
- source: R
- source: e
- source: f
- source: l
- source: e
- source: c
- source: t
- source: .
- source: g
- source: e
- source: t
- source: (
- source: o
- source: r
- source: i
- source: g
- source: i
- source: 'n'
- source: a
- source: l
- source: ','
- source: k
- source: e
- source: 'y'
- source: ','
- source: .
- source: .
- source: .
- source: a
- source: r
- source: g
- source: s
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '}'
- source: ','
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: t
- source: (
- source: o
- source: r
- source: i
- source: g
- source: i
- source: 'n'
- source: a
- source: l
- source: ','
- source: k
- source: e
- source: 'y'
- source: ','
- source: .
- source: .
- source: .
- source: a
- source: r
- source: g
- source: s
- source: )
- source: '{'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: i
  scopesBegin:
    - string.quoted.double.json.comments
- source: f
- source: (
- source: k
- source: e
- source: 'y'
- source: '='
- source: '='
- source: p
- source: r
- source: o
- source: x
- source: 'y'
- source: S
- source: 'y'
- source: m
- source: b
- source: o
- source: l
- source: '|'
- source: '|'
- source: k
- source: e
- source: 'y'
- source: '='
- source: '='
- source: t
- source: h
- source: i
- source: s
- source: P
- source: r
- source: o
- source: x
- source: 'y'
- source: S
- source: 'y'
- source: m
- source: b
- source: o
- source: l
- source: )
- source: '{'
- source: r
- source: e
- source: t
- source: u
- source: r
- source: 'n'
  scopesEnd:
    - string.quoted.double.json.comments
- source: '}'
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: r
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: t
- source: u
- source: r
- source: 'n'
- source: R
- source: e
- source: f
- source: l
- source: e
- source: c
- source: t
- source: .
- source: s
- source: e
- source: t
- source: (
- source: o
- source: r
- source: i
- source: g
- source: i
- source: 'n'
- source: a
- source: l
- source: ','
- source: k
- source: e
- source: 'y'
- source: ','
- source: .
- source: .
- source: .
- source: a
- source: r
- source: g
- source: s
- source: )
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '}'
- source: ','
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: h
  scopesBegin:
    - string.quoted.double.json.comments
- source: a
- source: s
- source: ':'
- source: R
- source: e
- source: f
- source: l
- source: e
- source: c
- source: t
- source: .
- source: h
- source: a
- source: s
- source: ','
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: d
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: l
- source: e
- source: t
- source: e
- source: P
- source: r
- source: o
- source: p
- source: e
- source: r
- source: t
- source: 'y'
- source: ':'
- source: R
- source: e
- source: f
- source: l
- source: e
- source: c
- source: t
- source: .
- source: d
- source: e
- source: l
- source: e
- source: t
- source: e
- source: P
- source: r
- source: o
- source: p
- source: e
- source: r
- source: t
- source: 'y'
- source: ','
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: i
  scopesBegin:
    - string.quoted.double.json.comments
- source: s
- source: E
- source: x
- source: t
- source: e
- source: 'n'
- source: s
- source: i
- source: b
- source: l
- source: e
- source: ':'
- source: R
- source: e
- source: f
- source: l
- source: e
- source: c
- source: t
- source: .
- source: i
- source: s
- source: E
- source: x
- source: t
- source: e
- source: 'n'
- source: s
- source: i
- source: b
- source: l
- source: e
- source: ','
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: p
  scopesBegin:
    - string.quoted.double.json.comments
- source: r
- source: e
- source: v
- source: e
- source: 'n'
- source: t
- source: E
- source: x
- source: t
- source: e
- source: 'n'
- source: s
- source: i
- source: o
- source: 'n'
- source: s
- source: ':'
- source: R
- source: e
- source: f
- source: l
- source: e
- source: c
- source: t
- source: .
- source: p
- source: r
- source: e
- source: v
- source: e
- source: 'n'
- source: t
- source: E
- source: x
- source: t
- source: e
- source: 'n'
- source: s
- source: i
- source: o
- source: 'n'
- source: s
- source: ','
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: s
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: t
- source: P
- source: r
- source: o
- source: t
- source: o
- source: t
- source: 'y'
- source: p
- source: e
- source: O
- source: f
- source: ':'
- source: R
- source: e
- source: f
- source: l
- source: e
- source: c
- source: t
- source: .
- source: s
- source: e
- source: t
- source: P
- source: r
- source: o
- source: t
- source: o
- source: t
- source: 'y'
- source: p
- source: e
- source: O
- source: f
- source: ','
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: d
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: f
- source: i
- source: 'n'
- source: e
- source: P
- source: r
- source: o
- source: p
- source: e
- source: r
- source: t
- source: 'y'
- source: ':'
- source: R
- source: e
- source: f
- source: l
- source: e
- source: c
- source: t
- source: .
- source: d
- source: e
- source: f
- source: i
- source: 'n'
- source: e
- source: P
- source: r
- source: o
- source: p
- source: e
- source: r
- source: t
- source: 'y'
- source: ','
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: g
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: t
- source: P
- source: r
- source: o
- source: t
- source: o
- source: t
- source: 'y'
- source: p
- source: e
- source: O
- source: f
- source: ':'
- source: R
- source: e
- source: f
- source: l
- source: e
- source: c
- source: t
- source: .
- source: g
- source: e
- source: t
- source: P
- source: r
- source: o
- source: t
- source: o
- source: t
- source: 'y'
- source: p
- source: e
- source: O
- source: f
- source: ','
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: g
  scopesBegin:
    - string.quoted.double.json.comments
- source: e
- source: t
- source: O
- source: w
- source: 'n'
- source: P
- source: r
- source: o
- source: p
- source: e
- source: r
- source: t
- source: 'y'
- source: D
- source: e
- source: s
- source: c
- source: r
- source: i
- source: p
- source: t
- source: o
- source: r
- source: ':'
- source: R
- source: e
- source: f
- source: l
- source: e
- source: c
- source: t
- source: .
- source: g
- source: e
- source: t
- source: O
- source: w
- source: 'n'
- source: P
- source: r
- source: o
- source: p
- source: e
- source: r
- source: t
- source: 'y'
- source: D
- source: e
- source: s
- source: c
- source: r
- source: i
- source: p
- source: t
- source: o
- source: r
- source: ','
  scopesEnd:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: '"'
  scopesBegin:
    - string.quoted.double.json.comments
  scopes:
    - punctuation.definition.string.begin.json.comments
- source: '}'
- source: )
  scopes:
    - string.quoted.double.json.comments
- source: '"'
  scopes:
    - punctuation.definition.string.end.json.comments
  scopesEnd:
    - string.quoted.double.json.comments
- source: ','
  scopes:
    - punctuation.separator.array.json.comments
- source: ']'
  scopes:
    - punctuation.definition.array.end.json.comments
  scopesEnd:
    - meta.structure.array.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
  scopesEnd:
    - meta.structure.dictionary.json.comments
- source: ','
  scopes:
    - punctuation.separator.dictionary.pair.json.comments
  scopesEnd:
    - meta.structure.dictionary.value.json.comments
- source: //
  scopesBegin:
    - comment.line.double-slash.js
    - punctuation.definition.comment.json.comments
- source: //
  scopesEnd:
    - punctuation.definition.comment.json.comments
- source: ' Deno'
- source: //
  scopesBegin:
    - punctuation.definition.comment.json.comments
- source: //
  scopesEnd:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.chdir.1"               : { "prefix": "Deno-chdir(\"/home/userA\")",                                                                                        "body": "Deno.chdir(${1:\"/home/userA\"})",                                                                                        },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.chdir.2"               : { "prefix": "Deno-chdir(\"../userB\")",                                                                                           "body": "Deno.chdir(${1:\"../userB\"})",                                                                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.chdir.3"               : { "prefix": "Deno-chdir(\"C:\\\\Program Files (x86)",                                                                             "body": "Deno.chdir(${1:\"C:\\\\Program Files (x86})",                                                                             },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.chmod.4"               : { "prefix": "Deno-chmod(\"/path/to/file\", 0o666)",                                                                               "body": "Deno.chmod(${1:\"/path/to/file\", 0o666})",                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.chmodSync.5"           : { "prefix": "Deno-chmodSync(\"/path/to/file\", 0o666)",                                                                           "body": "Deno.chmodSync(${1:\"/path/to/file\", 0o666})",                                                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.chown.6"               : { "prefix": "Deno-chown(\"myFile.txt\", 1000, 1002)",                                                                             "body": "Deno.chown(${1:\"myFile.txt\", 1000, 1002})",                                                                             },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.chownSync.7"           : { "prefix": "Deno-chownSync(\"myFile.txt\", 1000, 1002)",                                                                         "body": "Deno.chownSync(${1:\"myFile.txt\", 1000, 1002})",                                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.8"                : { "prefix": "Deno-open(\"my_file.txt\")",                                                                                         "body": "Deno.open(${1:\"my_file.txt\"})",                                                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.close.9"               : { "prefix": "Deno-close(file.rid)",                                                                                               "body": "Deno.close(${1:file.rid})",                                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.connect.10"            : { "prefix": "Deno-connect({ port: 80 })",                                                                                         "body": "Deno.connect(${1:{ port: 80 }})",                                                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.connect.11"            : { "prefix": "Deno-connect({ hostname: \"192.0.2.1\", port: 80 })",                                                                "body": "Deno.connect(${1:{ hostname: \"192.0.2.1\", port: 80 }})",                                                                },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.connect.12"            : { "prefix": "Deno-connect({ hostname: \"[2001:db8::1]\", port: 80 })",                                                            "body": "Deno.connect(${1:{ hostname: \"[2001:db8::1]\", port: 80 }})",                                                            },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.connect.13"            : { "prefix": "Deno-connect({ hostname: \"golang.org\", port: 80, transport: \"tcp\" })",                                           "body": "Deno.connect(${1:{ hostname: \"golang.org\", port: 80, transport: \"tcp\" }})",                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readTextFile.14"       : { "prefix": "Deno-readTextFile(\"./certs/my_custom_root_CA.pem\")",                                                               "body": "Deno.readTextFile(${1:\"./certs/my_custom_root_CA.pem\"})",                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.connectTls.15"         : { "prefix": "Deno-connectTls({ port: 80 })",                                                                                      "body": "Deno.connectTls(${1:{ port: 80 }})",                                                                                      },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.connectTls.16"         : { "prefix": "Deno-connectTls({ caCerts: [caCert], hostname: \"192.0.2.1\", port: 80 })",                                          "body": "Deno.connectTls(${1:{ caCerts: [caCert], hostname: \"192.0.2.1\", port: 80 }})",                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.connectTls.17"         : { "prefix": "Deno-connectTls({ hostname: \"[2001:db8::1]\", port: 80 })",                                                         "body": "Deno.connectTls(${1:{ hostname: \"[2001:db8::1]\", port: 80 }})",                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.connectTls.18"         : { "prefix": "Deno-connectTls({ caCerts: [caCert], hostname: \"golang.org\", port: 80})",                                          "body": "Deno.connectTls(${1:{ caCerts: [caCert], hostname: \"golang.org\", port: 80}})",                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.19"               : { "prefix": "Deno-open(\"my_file.txt\")",                                                                                         "body": "Deno.open(${1:\"my_file.txt\"})",                                                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.copy.20"               : { "prefix": "Deno-copy(source, Deno.stdout)",                                                                                     "body": "Deno.copy(${1:source, Deno.stdout})",                                                                                     },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.create.21"             : { "prefix": "Deno-create(\"my_file_2.txt\")",                                                                                     "body": "Deno.create(${1:\"my_file_2.txt\"})",                                                                                     },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.copy.22"               : { "prefix": "Deno-copy(source, destination)",                                                                                     "body": "Deno.copy(${1:source, destination})",                                                                                     },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.copyFile.23"           : { "prefix": "Deno-copyFile(\"from.txt\", \"to.txt\")",                                                                            "body": "Deno.copyFile(${1:\"from.txt\", \"to.txt\"})",                                                                            },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.copyFileSync.24"       : { "prefix": "Deno-copyFileSync(\"from.txt\", \"to.txt\")",                                                                        "body": "Deno.copyFileSync(${1:\"from.txt\", \"to.txt\"})",                                                                        },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.create.25"             : { "prefix": "Deno-create(\"/foo/bar.txt\")",                                                                                      "body": "Deno.create(${1:\"/foo/bar.txt\"})",                                                                                      },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.createSync.26"         : { "prefix": "Deno-createSync(\"/foo/bar.txt\")",                                                                                  "body": "Deno.createSync(${1:\"/foo/bar.txt\"})",                                                                                  },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.execPath.27"           : { "prefix": "Deno-execPath())",                                                                                                   "body": "Deno.execPath(${1:)})",                                                                                                   },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.exit.28"               : { "prefix": "Deno-exit(5)",                                                                                                       "body": "Deno.exit(${1:5})",                                                                                                       },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.29"               : { "prefix": "Deno-open(\"my_file.txt\", { read: true, write: true, create: true })",                                              "body": "Deno.open(${1:\"my_file.txt\", { read: true, write: true, create: true }})",                                              },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.write.30"              : { "prefix": "Deno-write(file.rid, new TextEncoder()",                                                                             "body": "Deno.write(${1:file.rid, new TextEncoder(})",                                                                             },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.fdatasync.31"          : { "prefix": "Deno-fdatasync(file.rid)",                                                                                           "body": "Deno.fdatasync(${1:file.rid})",                                                                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readFile.32"           : { "prefix": "Deno-readFile(\"my_file.txt\")",                                                                                     "body": "Deno.readFile(${1:\"my_file.txt\"})",                                                                                     },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.33"               : { "prefix": "Deno-open(\"file.txt\", { read: true })",                                                                            "body": "Deno.open(${1:\"file.txt\", { read: true }})",                                                                            },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.fstat.34"              : { "prefix": "Deno-fstat(file.rid)",                                                                                               "body": "Deno.fstat(${1:file.rid})",                                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.openSync.35"           : { "prefix": "Deno-openSync(\"file.txt\", { read: true })",                                                                        "body": "Deno.openSync(${1:\"file.txt\", { read: true }})",                                                                        },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.fstatSync.36"          : { "prefix": "Deno-fstatSync(file.rid)",                                                                                           "body": "Deno.fstatSync(${1:file.rid})",                                                                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.37"               : { "prefix": "Deno-open(\"my_file.txt\", { read: true, write: true, create: true })",                                              "body": "Deno.open(${1:\"my_file.txt\", { read: true, write: true, create: true }})",                                              },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.write.38"              : { "prefix": "Deno-write(file.rid, new TextEncoder()",                                                                             "body": "Deno.write(${1:file.rid, new TextEncoder(})",                                                                             },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.ftruncate.39"          : { "prefix": "Deno-ftruncate(file.rid, 1)",                                                                                        "body": "Deno.ftruncate(${1:file.rid, 1})",                                                                                        },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.fsync.40"              : { "prefix": "Deno-fsync(file.rid)",                                                                                               "body": "Deno.fsync(${1:file.rid})",                                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readFile.41"           : { "prefix": "Deno-readFile(\"my_file.txt\")",                                                                                     "body": "Deno.readFile(${1:\"my_file.txt\"})",                                                                                     },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.openSync.42"           : { "prefix": "Deno-openSync(\"my_file.txt\", { read: true, write: true, create: true })",                                          "body": "Deno.openSync(${1:\"my_file.txt\", { read: true, write: true, create: true }})",                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeSync.43"          : { "prefix": "Deno-writeSync(file.rid, new TextEncoder()",                                                                         "body": "Deno.writeSync(${1:file.rid, new TextEncoder(})",                                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.ftruncateSync.44"      : { "prefix": "Deno-ftruncateSync(file.rid, 1)",                                                                                    "body": "Deno.ftruncateSync(${1:file.rid, 1})",                                                                                    },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.fsyncSync.45"          : { "prefix": "Deno-fsyncSync(file.rid)",                                                                                           "body": "Deno.fsyncSync(${1:file.rid})",                                                                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readFileSync.46"       : { "prefix": "Deno-readFileSync(\"my_file.txt\")",                                                                                 "body": "Deno.readFileSync(${1:\"my_file.txt\"})",                                                                                 },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.47"               : { "prefix": "Deno-open(\"my_file.txt\", { read: true, write: true, create: true })",                                              "body": "Deno.open(${1:\"my_file.txt\", { read: true, write: true, create: true }})",                                              },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.ftruncate.48"          : { "prefix": "Deno-ftruncate(file.rid)",                                                                                           "body": "Deno.ftruncate(${1:file.rid})",                                                                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.49"               : { "prefix": "Deno-open(\"my_file.txt\", { read: true, write: true, create: true })",                                              "body": "Deno.open(${1:\"my_file.txt\", { read: true, write: true, create: true }})",                                              },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.write.50"              : { "prefix": "Deno-write(file.rid, new TextEncoder()",                                                                             "body": "Deno.write(${1:file.rid, new TextEncoder(})",                                                                             },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.ftruncate.51"          : { "prefix": "Deno-ftruncate(file.rid, 7)",                                                                                        "body": "Deno.ftruncate(${1:file.rid, 7})",                                                                                        },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.read.52"               : { "prefix": "Deno-read(file.rid, data)",                                                                                          "body": "Deno.read(${1:file.rid, data})",                                                                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.openSync.53"           : { "prefix": "Deno-openSync(\"my_file.txt\", { read: true, write: true, truncate: true, create: true })",                          "body": "Deno.openSync(${1:\"my_file.txt\", { read: true, write: true, truncate: true, create: true }})",                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.ftruncateSync.54"      : { "prefix": "Deno-ftruncateSync(file.rid)",                                                                                       "body": "Deno.ftruncateSync(${1:file.rid})",                                                                                       },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.openSync.55"           : { "prefix": "Deno-openSync(\"my_file.txt\", { read: true, write: true, create: true })",                                          "body": "Deno.openSync(${1:\"my_file.txt\", { read: true, write: true, create: true }})",                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeSync.56"          : { "prefix": "Deno-writeSync(file.rid, new TextEncoder()",                                                                         "body": "Deno.writeSync(${1:file.rid, new TextEncoder(})",                                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.ftruncateSync.57"      : { "prefix": "Deno-ftruncateSync(file.rid, 7)",                                                                                    "body": "Deno.ftruncateSync(${1:file.rid, 7})",                                                                                    },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.seekSync.58"           : { "prefix": "Deno-seekSync(file.rid, 0, Deno.SeekMode.Start)",                                                                    "body": "Deno.seekSync(${1:file.rid, 0, Deno.SeekMode.Start})",                                                                    },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readSync.59"           : { "prefix": "Deno-readSync(file.rid, data)",                                                                                      "body": "Deno.readSync(${1:file.rid, data})",                                                                                      },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.inspect.60"            : { "prefix": "Deno-inspect(obj)",                                                                                                  "body": "Deno.inspect(${1:obj})",                                                                                                  },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.inspect.61"            : { "prefix": "Deno-inspect(new A()",                                                                                               "body": "Deno.inspect(${1:new A(})",                                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.inspect.62"            : { "prefix": "Deno-inspect({a: {b: {c: {d: ''hello''}}}}, {depth: 2})",                                                              "body": "Deno.inspect(${1:{a: {b: {c: {d: ''hello''}}}}, {depth: 2}})",                                                              },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.openSync.63"           : { "prefix": "Deno-openSync(\"my_file.txt\")",                                                                                     "body": "Deno.openSync(${1:\"my_file.txt\"})",                                                                                     },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.openSync.64"           : { "prefix": "Deno-openSync(\"/dev/tty6\")",                                                                                       "body": "Deno.openSync(${1:\"/dev/tty6\"})",                                                                                       },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.isatty.65"             : { "prefix": "Deno-isatty(nonTTYRid)",                                                                                             "body": "Deno.isatty(${1:nonTTYRid})",                                                                                             },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.isatty.66"             : { "prefix": "Deno-isatty(ttyRid)",                                                                                                "body": "Deno.isatty(${1:ttyRid})",                                                                                                },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.close.67"              : { "prefix": "Deno-close(nonTTYRid)",                                                                                              "body": "Deno.close(${1:nonTTYRid})",                                                                                              },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.close.68"              : { "prefix": "Deno-close(ttyRid)",                                                                                                 "body": "Deno.close(${1:ttyRid})",                                                                                                 },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.69"               : { "prefix": "Deno-open(\"/etc/passwd\")",                                                                                         "body": "Deno.open(${1:\"/etc/passwd\"})",                                                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.iter.70"               : { "prefix": "Deno-iter(f)",                                                                                                       "body": "Deno.iter(${1:f})",                                                                                                       },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.71"               : { "prefix": "Deno-open(\"/etc/passwd\")",                                                                                         "body": "Deno.open(${1:\"/etc/passwd\"})",                                                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.iter.72"               : { "prefix": "Deno-iter(f, {\n  bufSize: 1024 * 1024\n})",                                                                         "body": "Deno.iter(${1:f, {\n  bufSize: 1024 * 1024\n}})",                                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.openSync.73"           : { "prefix": "Deno-openSync(\"/etc/passwd\")",                                                                                     "body": "Deno.openSync(${1:\"/etc/passwd\"})",                                                                                     },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.iterSync.74"           : { "prefix": "Deno-iterSync(f)",                                                                                                   "body": "Deno.iterSync(${1:f})",                                                                                                   },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.75"               : { "prefix": "Deno-open(\"/etc/passwd\")",                                                                                         "body": "Deno.open(${1:\"/etc/passwd\"})",                                                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.iterSync.76"           : { "prefix": "Deno-iterSync(f, {\n  bufSize: 1024 * 1024\n})",                                                                     "body": "Deno.iterSync(${1:f, {\n  bufSize: 1024 * 1024\n}})",                                                                     },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.run.77"                : { "prefix": "Deno-run({\n   cmd: [\"sleep\", \"10000\"]\n })",                                                                    "body": "Deno.run(${1:{\n   cmd: [\"sleep\", \"10000\"]\n }})",                                                                    },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.kill.78"               : { "prefix": "Deno-kill(p.pid, \"SIGINT\")",                                                                                       "body": "Deno.kill(${1:p.pid, \"SIGINT\"})",                                                                                       },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.link.79"               : { "prefix": "Deno-link(\"old/name\", \"new/name\")",                                                                              "body": "Deno.link(${1:\"old/name\", \"new/name\"})",                                                                              },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.linkSync.80"           : { "prefix": "Deno-linkSync(\"old/name\", \"new/name\")",                                                                          "body": "Deno.linkSync(${1:\"old/name\", \"new/name\"})",                                                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.listen.81"             : { "prefix": "Deno-listen({ port: 80 })",                                                                                          "body": "Deno.listen(${1:{ port: 80 }})",                                                                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.listen.82"             : { "prefix": "Deno-listen({ hostname: \"192.0.2.1\", port: 80 })",                                                                 "body": "Deno.listen(${1:{ hostname: \"192.0.2.1\", port: 80 }})",                                                                 },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.listen.83"             : { "prefix": "Deno-listen({ hostname: \"[2001:db8::1]\", port: 80 })",                                                             "body": "Deno.listen(${1:{ hostname: \"[2001:db8::1]\", port: 80 }})",                                                             },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.listen.84"             : { "prefix": "Deno-listen({ hostname: \"golang.org\", port: 80, transport: \"tcp\" })",                                            "body": "Deno.listen(${1:{ hostname: \"golang.org\", port: 80, transport: \"tcp\" }})",                                            },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.listenTls.85"          : { "prefix": "Deno-listenTls({ port: 443, certFile: \"./server.crt\", keyFile: \"./server.key\" })",                               "body": "Deno.listenTls(${1:{ port: 443, certFile: \"./server.crt\", keyFile: \"./server.key\" }})",                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.lstat.86"              : { "prefix": "Deno-lstat(\"hello.txt\")",                                                                                          "body": "Deno.lstat(${1:\"hello.txt\"})",                                                                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.lstatSync.87"          : { "prefix": "Deno-lstatSync(\"hello.txt\")",                                                                                      "body": "Deno.lstatSync(${1:\"hello.txt\"})",                                                                                      },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.makeTempDir.88"        : { "prefix": "Deno-makeTempDir();  // e.g. /tmp/2894ea76\nconst tempDirName1 = await Deno.makeTempDir({ prefix: ''my_temp'' })",     "body": "Deno.makeTempDir(${1:);  // e.g. /tmp/2894ea76\nconst tempDirName1 = await Deno.makeTempDir({ prefix: ''my_temp'' }})",     },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.makeTempDirSync.89"    : { "prefix": "Deno-makeTempDirSync();  // e.g. /tmp/2894ea76\nconst tempDirName1 = Deno.makeTempDirSync({ prefix: ''my_temp'' })",   "body": "Deno.makeTempDirSync(${1:);  // e.g. /tmp/2894ea76\nconst tempDirName1 = Deno.makeTempDirSync({ prefix: ''my_temp'' }})",   },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.makeTempFile.90"       : { "prefix": "Deno-makeTempFile();  // e.g. /tmp/419e0bf2\nconst tmpFileName1 = await Deno.makeTempFile({ prefix: ''my_temp'' })",   "body": "Deno.makeTempFile(${1:);  // e.g. /tmp/419e0bf2\nconst tmpFileName1 = await Deno.makeTempFile({ prefix: ''my_temp'' }})",   },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.makeTempFileSync.91"   : { "prefix": "Deno-makeTempFileSync(); // e.g. /tmp/419e0bf2\nconst tempFileName1 = Deno.makeTempFileSync({ prefix: ''my_temp'' })", "body": "Deno.makeTempFileSync(${1:); // e.g. /tmp/419e0bf2\nconst tempFileName1 = Deno.makeTempFileSync({ prefix: ''my_temp'' }})", },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.metrics.92"            : { "prefix": "Deno-metrics())",                                                                                                    "body": "Deno.metrics(${1:)})",                                                                                                    },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.mkdir.93"              : { "prefix": "Deno-mkdir(\"new_dir\")",                                                                                            "body": "Deno.mkdir(${1:\"new_dir\"})",                                                                                            },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.mkdir.94"              : { "prefix": "Deno-mkdir(\"nested/directories\", { recursive: true })",                                                            "body": "Deno.mkdir(${1:\"nested/directories\", { recursive: true }})",                                                            },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.mkdir.95"              : { "prefix": "Deno-mkdir(\"restricted_access_dir\", { mode: 0o700 })",                                                             "body": "Deno.mkdir(${1:\"restricted_access_dir\", { mode: 0o700 }})",                                                             },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.mkdirSync.96"          : { "prefix": "Deno-mkdirSync(\"new_dir\")",                                                                                        "body": "Deno.mkdirSync(${1:\"new_dir\"})",                                                                                        },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.mkdirSync.97"          : { "prefix": "Deno-mkdirSync(\"nested/directories\", { recursive: true })",                                                        "body": "Deno.mkdirSync(${1:\"nested/directories\", { recursive: true }})",                                                        },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.mkdirSync.98"          : { "prefix": "Deno-mkdirSync(\"restricted_access_dir\", { mode: 0o700 })",                                                         "body": "Deno.mkdirSync(${1:\"restricted_access_dir\", { mode: 0o700 }})",                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.99"               : { "prefix": "Deno-open(\"/foo/bar.txt\", { read: true, write: true })",                                                           "body": "Deno.open(${1:\"/foo/bar.txt\", { read: true, write: true }})",                                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.close.100"             : { "prefix": "Deno-close(file.rid)",                                                                                               "body": "Deno.close(${1:file.rid})",                                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.openSync.101"          : { "prefix": "Deno-openSync(\"/foo/bar.txt\", { read: true, write: true })",                                                       "body": "Deno.openSync(${1:\"/foo/bar.txt\", { read: true, write: true }})",                                                       },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.close.102"             : { "prefix": "Deno-close(file.rid)",                                                                                               "body": "Deno.close(${1:file.rid})",                                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.103"              : { "prefix": "Deno-open(\"/foo/bar.txt\")",                                                                                        "body": "Deno.open(${1:\"/foo/bar.txt\"})",                                                                                        },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.read.104"              : { "prefix": "Deno-read(file.rid, buf)",                                                                                           "body": "Deno.read(${1:file.rid, buf})",                                                                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.close.105"             : { "prefix": "Deno-close(file.rid)",                                                                                               "body": "Deno.close(${1:file.rid})",                                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readAll.106"           : { "prefix": "Deno-readAll(Deno.stdin)",                                                                                           "body": "Deno.readAll(${1:Deno.stdin})",                                                                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.107"              : { "prefix": "Deno-open(\"my_file.txt\", {read: true})",                                                                           "body": "Deno.open(${1:\"my_file.txt\", {read: true}})",                                                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readAll.108"           : { "prefix": "Deno-readAll(file)",                                                                                                 "body": "Deno.readAll(${1:file})",                                                                                                 },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.close.109"             : { "prefix": "Deno-close(file.rid)",                                                                                               "body": "Deno.close(${1:file.rid})",                                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.Buffer.110"            : { "prefix": "Deno-Buffer(myData.buffer as ArrayBuffer)",                                                                          "body": "Deno.Buffer(${1:myData.buffer as ArrayBuffer})",                                                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readAll.111"           : { "prefix": "Deno-readAll(reader)",                                                                                               "body": "Deno.readAll(${1:reader})",                                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readAllSync.112"       : { "prefix": "Deno-readAllSync(Deno.stdin)",                                                                                       "body": "Deno.readAllSync(${1:Deno.stdin})",                                                                                       },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.openSync.113"          : { "prefix": "Deno-openSync(\"my_file.txt\", {read: true})",                                                                       "body": "Deno.openSync(${1:\"my_file.txt\", {read: true}})",                                                                       },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readAllSync.114"       : { "prefix": "Deno-readAllSync(file)",                                                                                             "body": "Deno.readAllSync(${1:file})",                                                                                             },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.close.115"             : { "prefix": "Deno-close(file.rid)",                                                                                               "body": "Deno.close(${1:file.rid})",                                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.Buffer.116"            : { "prefix": "Deno-Buffer(myData.buffer as ArrayBuffer)",                                                                          "body": "Deno.Buffer(${1:myData.buffer as ArrayBuffer})",                                                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readAllSync.117"       : { "prefix": "Deno-readAllSync(reader)",                                                                                           "body": "Deno.readAllSync(${1:reader})",                                                                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readDir.118"           : { "prefix": "Deno-readDir(\"/\")",                                                                                                "body": "Deno.readDir(${1:\"/\"})",                                                                                                },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readDirSync.119"       : { "prefix": "Deno-readDirSync(\"/\")",                                                                                            "body": "Deno.readDirSync(${1:\"/\"})",                                                                                            },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readFile.120"          : { "prefix": "Deno-readFile(\"hello.txt\")",                                                                                       "body": "Deno.readFile(${1:\"hello.txt\"})",                                                                                       },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readFileSync.121"      : { "prefix": "Deno-readFileSync(\"hello.txt\")",                                                                                   "body": "Deno.readFileSync(${1:\"hello.txt\"})",                                                                                   },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.symlink.122"           : { "prefix": "Deno-symlink(\"./test.txt\", \"./test_link.txt\")",                                                                  "body": "Deno.symlink(${1:\"./test.txt\", \"./test_link.txt\"})",                                                                  },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readLink.123"          : { "prefix": "Deno-readLink(\"./test_link.txt\")",                                                                                 "body": "Deno.readLink(${1:\"./test_link.txt\"})",                                                                                 },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.symlinkSync.124"       : { "prefix": "Deno-symlinkSync(\"./test.txt\", \"./test_link.txt\")",                                                              "body": "Deno.symlinkSync(${1:\"./test.txt\", \"./test_link.txt\"})",                                                              },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readLinkSync.125"      : { "prefix": "Deno-readLinkSync(\"./test_link.txt\")",                                                                             "body": "Deno.readLinkSync(${1:\"./test_link.txt\"})",                                                                             },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.openSync.126"          : { "prefix": "Deno-openSync(\"/foo/bar.txt\")",                                                                                    "body": "Deno.openSync(${1:\"/foo/bar.txt\"})",                                                                                    },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readSync.127"          : { "prefix": "Deno-readSync(file.rid, buf)",                                                                                       "body": "Deno.readSync(${1:file.rid, buf})",                                                                                       },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.close.128"             : { "prefix": "Deno-close(file.rid)",                                                                                               "body": "Deno.close(${1:file.rid})",                                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readTextFile.129"      : { "prefix": "Deno-readTextFile(\"hello.txt\")",                                                                                   "body": "Deno.readTextFile(${1:\"hello.txt\"})",                                                                                   },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readTextFileSync.130"  : { "prefix": "Deno-readTextFileSync(\"hello.txt\")",                                                                               "body": "Deno.readTextFileSync(${1:\"hello.txt\"})",                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.symlink.131"           : { "prefix": "Deno-symlink(\"file.txt\", \"symlink_file.txt\")",                                                                   "body": "Deno.symlink(${1:\"file.txt\", \"symlink_file.txt\"})",                                                                   },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.realPath.132"          : { "prefix": "Deno-realPath(\"./file.txt\")",                                                                                      "body": "Deno.realPath(${1:\"./file.txt\"})",                                                                                      },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.realPath.133"          : { "prefix": "Deno-realPath(\"./symlink_file.txt\")",                                                                              "body": "Deno.realPath(${1:\"./symlink_file.txt\"})",                                                                              },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.symlinkSync.134"       : { "prefix": "Deno-symlinkSync(\"file.txt\", \"symlink_file.txt\")",                                                               "body": "Deno.symlinkSync(${1:\"file.txt\", \"symlink_file.txt\"})",                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.realPathSync.135"      : { "prefix": "Deno-realPathSync(\"./file.txt\")",                                                                                  "body": "Deno.realPathSync(${1:\"./file.txt\"})",                                                                                  },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.realPathSync.136"      : { "prefix": "Deno-realPathSync(\"./symlink_file.txt\")",                                                                          "body": "Deno.realPathSync(${1:\"./symlink_file.txt\"})",                                                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.remove.137"            : { "prefix": "Deno-remove(\"/path/to/empty_dir/or/file\")",                                                                        "body": "Deno.remove(${1:\"/path/to/empty_dir/or/file\"})",                                                                        },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.remove.138"            : { "prefix": "Deno-remove(\"/path/to/populated_dir/or/file\", { recursive: true })",                                               "body": "Deno.remove(${1:\"/path/to/populated_dir/or/file\", { recursive: true }})",                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.removeSync.139"        : { "prefix": "Deno-removeSync(\"/path/to/empty_dir/or/file\")",                                                                    "body": "Deno.removeSync(${1:\"/path/to/empty_dir/or/file\"})",                                                                    },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.removeSync.140"        : { "prefix": "Deno-removeSync(\"/path/to/populated_dir/or/file\", { recursive: true })",                                           "body": "Deno.removeSync(${1:\"/path/to/populated_dir/or/file\", { recursive: true }})",                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.rename.141"            : { "prefix": "Deno-rename(\"old/path\", \"new/path\")",                                                                            "body": "Deno.rename(${1:\"old/path\", \"new/path\"})",                                                                            },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.renameSync.142"        : { "prefix": "Deno-renameSync(\"old/path\", \"new/path\")",                                                                        "body": "Deno.renameSync(${1:\"old/path\", \"new/path\"})",                                                                        },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.resources.143"         : { "prefix": "Deno-resources())",                                                                                                  "body": "Deno.resources(${1:)})",                                                                                                  },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.openSync.144"          : { "prefix": "Deno-openSync(''../test.file'')",                                                                                      "body": "Deno.openSync(${1:''../test.file''})",                                                                                      },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.resources.145"         : { "prefix": "Deno-resources())",                                                                                                  "body": "Deno.resources(${1:)})",                                                                                                  },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.run.146"               : { "prefix": "Deno-run({\n  cmd: [\"echo\", \"hello\"],\n})",                                                                      "body": "Deno.run(${1:{\n  cmd: [\"echo\", \"hello\"],\n}})",                                                                      },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.147"              : { "prefix": "Deno-open(''hello.txt'', {read: true, write: true, truncate: true, create: true})",                                    "body": "Deno.open(${1:''hello.txt'', {read: true, write: true, truncate: true, create: true}})",                                    },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.write.148"             : { "prefix": "Deno-write(file.rid, new TextEncoder()",                                                                             "body": "Deno.write(${1:file.rid, new TextEncoder(})",                                                                             },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.seek.149"              : { "prefix": "Deno-seek(file.rid, 6, Deno.SeekMode.Start)",                                                                        "body": "Deno.seek(${1:file.rid, 6, Deno.SeekMode.Start})",                                                                        },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.150"              : { "prefix": "Deno-open(''hello.txt'', {read: true, write: true, truncate: true, create: true})",                                    "body": "Deno.open(${1:''hello.txt'', {read: true, write: true, truncate: true, create: true}})",                                    },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.write.151"             : { "prefix": "Deno-write(file.rid, new TextEncoder()",                                                                             "body": "Deno.write(${1:file.rid, new TextEncoder(})",                                                                             },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.seek.152"              : { "prefix": "Deno-seek(file.rid, 6, Deno.SeekMode.Start)",                                                                        "body": "Deno.seek(${1:file.rid, 6, Deno.SeekMode.Start})",                                                                        },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.seek.153"              : { "prefix": "Deno-seek(file.rid, 2, Deno.SeekMode.Current)",                                                                      "body": "Deno.seek(${1:file.rid, 2, Deno.SeekMode.Current})",                                                                      },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.seek.154"              : { "prefix": "Deno-seek(file.rid, -2, Deno.SeekMode.End)",                                                                         "body": "Deno.seek(${1:file.rid, -2, Deno.SeekMode.End})",                                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.openSync.155"          : { "prefix": "Deno-openSync(''hello.txt'', {read: true, write: true, truncate: true, create: true})",                                "body": "Deno.openSync(${1:''hello.txt'', {read: true, write: true, truncate: true, create: true}})",                                },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeSync.156"         : { "prefix": "Deno-writeSync(file.rid, new TextEncoder()",                                                                         "body": "Deno.writeSync(${1:file.rid, new TextEncoder(})",                                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.seekSync.157"          : { "prefix": "Deno-seekSync(file.rid, 6, Deno.SeekMode.Start)",                                                                    "body": "Deno.seekSync(${1:file.rid, 6, Deno.SeekMode.Start})",                                                                    },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.openSync.158"          : { "prefix": "Deno-openSync(''hello.txt'', {read: true, write: true, truncate: true, create: true})",                                "body": "Deno.openSync(${1:''hello.txt'', {read: true, write: true, truncate: true, create: true}})",                                },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeSync.159"         : { "prefix": "Deno-writeSync(file.rid, new TextEncoder()",                                                                         "body": "Deno.writeSync(${1:file.rid, new TextEncoder(})",                                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.seekSync.160"          : { "prefix": "Deno-seekSync(file.rid, 6, Deno.SeekMode.Start)",                                                                    "body": "Deno.seekSync(${1:file.rid, 6, Deno.SeekMode.Start})",                                                                    },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.seekSync.161"          : { "prefix": "Deno-seekSync(file.rid, 2, Deno.SeekMode.Current)",                                                                  "body": "Deno.seekSync(${1:file.rid, 2, Deno.SeekMode.Current})",                                                                  },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.seekSync.162"          : { "prefix": "Deno-seekSync(file.rid, -2, Deno.SeekMode.End)",                                                                     "body": "Deno.seekSync(${1:file.rid, -2, Deno.SeekMode.End})",                                                                     },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.listen.163"            : { "prefix": "Deno-listen({ port: 80 })",                                                                                          "body": "Deno.listen(${1:{ port: 80 }})",                                                                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.serveHttp.164"         : { "prefix": "Deno-serveHttp(await conn.accept()",                                                                                 "body": "Deno.serveHttp(${1:await conn.accept(})",                                                                                 },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.serveHttp.165"         : { "prefix": "Deno-serveHttp(conn)",                                                                                               "body": "Deno.serveHttp(${1:conn})",                                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.listen.166"            : { "prefix": "Deno-listen({ port: 80 })",                                                                                          "body": "Deno.listen(${1:{ port: 80 }})",                                                                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.listen.167"            : { "prefix": "Deno-listen({ port: 80 })",                                                                                          "body": "Deno.listen(${1:{ port: 80 }})",                                                                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.shutdown.168"          : { "prefix": "Deno-shutdown(conn.rid)",                                                                                            "body": "Deno.shutdown(${1:conn.rid})",                                                                                            },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.connect.169"           : { "prefix": "Deno-connect({ port: 80, hostname: \"127.0.0.1\" })",                                                                "body": "Deno.connect(${1:{ port: 80, hostname: \"127.0.0.1\" }})",                                                                },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readTextFile.170"      : { "prefix": "Deno-readTextFile(\"./certs/my_custom_root_CA.pem\")",                                                               "body": "Deno.readTextFile(${1:\"./certs/my_custom_root_CA.pem\"})",                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.startTls.171"          : { "prefix": "Deno-startTls(conn, { caCerts: [caCert], hostname: \"localhost\" })",                                                "body": "Deno.startTls(${1:conn, { caCerts: [caCert], hostname: \"localhost\" }})",                                                },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.stat.172"              : { "prefix": "Deno-stat(\"hello.txt\")",                                                                                           "body": "Deno.stat(${1:\"hello.txt\"})",                                                                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.statSync.173"          : { "prefix": "Deno-statSync(\"hello.txt\")",                                                                                       "body": "Deno.statSync(${1:\"hello.txt\"})",                                                                                       },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.symlink.174"           : { "prefix": "Deno-symlink(\"old/name\", \"new/name\")",                                                                           "body": "Deno.symlink(${1:\"old/name\", \"new/name\"})",                                                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.symlinkSync.175"       : { "prefix": "Deno-symlinkSync(\"old/name\", \"new/name\")",                                                                       "body": "Deno.symlinkSync(${1:\"old/name\", \"new/name\"})",                                                                       },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.test.176"              : { "prefix": "Deno-test({\n  name: \"example test\",\n  fn()",                                                                     "body": "Deno.test(${1:{\n  name: \"example test\",\n  fn(})",                                                                     },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.test.177"              : { "prefix": "Deno-test({\n  name: \"example ignored test\",\n  ignore: Deno.build.os === \"windows\",\n  fn()",                   "body": "Deno.test(${1:{\n  name: \"example ignored test\",\n  ignore: Deno.build.os === \"windows\",\n  fn(})",                   },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.test.178"              : { "prefix": "Deno-test({\n  name: \"example async test\",\n  async fn()",                                                         "body": "Deno.test(${1:{\n  name: \"example async test\",\n  async fn(})",                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readFile.179"          : { "prefix": "Deno-readFile(\"hello_world.txt\")",                                                                                 "body": "Deno.readFile(${1:\"hello_world.txt\"})",                                                                                 },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.truncate.180"          : { "prefix": "Deno-truncate(\"my_file.txt\")",                                                                                     "body": "Deno.truncate(${1:\"my_file.txt\"})",                                                                                     },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.makeTempFile.181"      : { "prefix": "Deno-makeTempFile();\nawait Deno.writeFile(file, new TextEncoder()",                                                 "body": "Deno.makeTempFile(${1:);\nawait Deno.writeFile(file, new TextEncoder(})",                                                 },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.truncate.182"          : { "prefix": "Deno-truncate(file, 7)",                                                                                             "body": "Deno.truncate(${1:file, 7})",                                                                                             },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readFile.183"          : { "prefix": "Deno-readFile(file)",                                                                                                "body": "Deno.readFile(${1:file})",                                                                                                },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.truncateSync.184"      : { "prefix": "Deno-truncateSync(\"my_file.txt\")",                                                                                 "body": "Deno.truncateSync(${1:\"my_file.txt\"})",                                                                                 },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.makeTempFileSync.185"  : { "prefix": "Deno-makeTempFileSync();\nDeno.writeFileSync(file, new TextEncoder()",                                               "body": "Deno.makeTempFileSync(${1:);\nDeno.writeFileSync(file, new TextEncoder(})",                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.truncateSync.186"      : { "prefix": "Deno-truncateSync(file, 7)",                                                                                         "body": "Deno.truncateSync(${1:file, 7})",                                                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.readFileSync.187"      : { "prefix": "Deno-readFileSync(file)",                                                                                            "body": "Deno.readFileSync(${1:file})",                                                                                            },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.listen.188"            : { "prefix": "Deno-listen({ port: 80 })",                                                                                          "body": "Deno.listen(${1:{ port: 80 }})",                                                                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.serveHttp.189"         : { "prefix": "Deno-serveHttp(await conn.accept()",                                                                                 "body": "Deno.serveHttp(${1:await conn.accept(})",                                                                                 },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.upgradeWebSocket.190"  : { "prefix": "Deno-upgradeWebSocket(e.request)",                                                                                   "body": "Deno.upgradeWebSocket(${1:e.request})",                                                                                   },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.watchFs.191"           : { "prefix": "Deno-watchFs(\"/\")",                                                                                                "body": "Deno.watchFs(${1:\"/\"})",                                                                                                },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.watchFs.192"           : { "prefix": "Deno-watchFs(\"/\")",                                                                                                "body": "Deno.watchFs(${1:\"/\"})",                                                                                                },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.193"              : { "prefix": "Deno-open(\"/foo/bar.txt\", { write: true })",                                                                       "body": "Deno.open(${1:\"/foo/bar.txt\", { write: true }})",                                                                       },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.write.194"             : { "prefix": "Deno-write(file.rid, data)",                                                                                         "body": "Deno.write(${1:file.rid, data})",                                                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.close.195"             : { "prefix": "Deno-close(file.rid)",                                                                                               "body": "Deno.close(${1:file.rid})",                                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeAll.196"          : { "prefix": "Deno-writeAll(Deno.stdout, contentBytes)",                                                                           "body": "Deno.writeAll(${1:Deno.stdout, contentBytes})",                                                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.open.197"              : { "prefix": "Deno-open(''test.file'', {write: true})",                                                                              "body": "Deno.open(${1:''test.file'', {write: true}})",                                                                              },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeAll.198"          : { "prefix": "Deno-writeAll(file, contentBytes)",                                                                                  "body": "Deno.writeAll(${1:file, contentBytes})",                                                                                  },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.close.199"             : { "prefix": "Deno-close(file.rid)",                                                                                               "body": "Deno.close(${1:file.rid})",                                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.Buffer.200"            : { "prefix": "Deno-Buffer();\nawait Deno.writeAll(writer, contentBytes)",                                                          "body": "Deno.Buffer(${1:);\nawait Deno.writeAll(writer, contentBytes})",                                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeAllSync.201"      : { "prefix": "Deno-writeAllSync(Deno.stdout, contentBytes)",                                                                       "body": "Deno.writeAllSync(${1:Deno.stdout, contentBytes})",                                                                       },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.openSync.202"          : { "prefix": "Deno-openSync(''test.file'', {write: true})",                                                                          "body": "Deno.openSync(${1:''test.file'', {write: true}})",                                                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeAllSync.203"      : { "prefix": "Deno-writeAllSync(file, contentBytes)",                                                                              "body": "Deno.writeAllSync(${1:file, contentBytes})",                                                                              },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.close.204"             : { "prefix": "Deno-close(file.rid)",                                                                                               "body": "Deno.close(${1:file.rid})",                                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.Buffer.205"            : { "prefix": "Deno-Buffer();\nDeno.writeAllSync(writer, contentBytes)",                                                            "body": "Deno.Buffer(${1:);\nDeno.writeAllSync(writer, contentBytes})",                                                            },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeFile.206"         : { "prefix": "Deno-writeFile(\"hello1.txt\", data)",                                                                               "body": "Deno.writeFile(${1:\"hello1.txt\", data})",                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeFile.207"         : { "prefix": "Deno-writeFile(\"hello2.txt\", data, {create: false})",                                                              "body": "Deno.writeFile(${1:\"hello2.txt\", data, {create: false}})",                                                              },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeFile.208"         : { "prefix": "Deno-writeFile(\"hello3.txt\", data, {mode: 0o777})",                                                                "body": "Deno.writeFile(${1:\"hello3.txt\", data, {mode: 0o777}})",                                                                },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeFile.209"         : { "prefix": "Deno-writeFile(\"hello4.txt\", data, {append: true})",                                                               "body": "Deno.writeFile(${1:\"hello4.txt\", data, {append: true}})",                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeFileSync.210"     : { "prefix": "Deno-writeFileSync(\"hello1.txt\", data)",                                                                           "body": "Deno.writeFileSync(${1:\"hello1.txt\", data})",                                                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeFileSync.211"     : { "prefix": "Deno-writeFileSync(\"hello2.txt\", data, {create: false})",                                                          "body": "Deno.writeFileSync(${1:\"hello2.txt\", data, {create: false}})",                                                          },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeFileSync.212"     : { "prefix": "Deno-writeFileSync(\"hello3.txt\", data, {mode: 0o777})",                                                            "body": "Deno.writeFileSync(${1:\"hello3.txt\", data, {mode: 0o777}})",                                                            },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeFileSync.213"     : { "prefix": "Deno-writeFileSync(\"hello4.txt\", data, {append: true})",                                                           "body": "Deno.writeFileSync(${1:\"hello4.txt\", data, {append: true}})",                                                           },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.openSync.214"          : { "prefix": "Deno-openSync(\"/foo/bar.txt\", {write: true})",                                                                     "body": "Deno.openSync(${1:\"/foo/bar.txt\", {write: true}})",                                                                     },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeSync.215"         : { "prefix": "Deno-writeSync(file.rid, data)",                                                                                     "body": "Deno.writeSync(${1:file.rid, data})",                                                                                     },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.close.216"             : { "prefix": "Deno-close(file.rid)",                                                                                               "body": "Deno.close(${1:file.rid})",                                                                                               },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeTextFile.217"     : { "prefix": "Deno-writeTextFile(\"hello1.txt\", \"Hello world\\n\")",                                                             "body": "Deno.writeTextFile(${1:\"hello1.txt\", \"Hello world\\n\"})",                                                             },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "Deno.writeTextFileSync.218" : { "prefix": "Deno-writeTextFileSync(\"hello1.txt\", \"Hello world\\n\")",                                                         "body": "Deno.writeTextFileSync(${1:\"hello1.txt\", \"Hello world\\n\"})",                                                         },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' // '
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' // html/jsx'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' // '
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "style_attribute": {  "prefix": "style", "body": [ "style=\"$0\"" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "class_attribute": {  "prefix": "class", "body": [ "class=\"$0\"" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' // '
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' // HTML tags'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' // '
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "a": {  "prefix": "a", "body": [ "<a>$0</a>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "abbr": {  "prefix": "abbr", "body": [ "<abbr>$0</abbr>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "acronym": {  "prefix": "acronym", "body": [ "<acronym>$0</acronym>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "address": {  "prefix": "address", "body": [ "<address>$0</address>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "applet": {  "prefix": "applet", "body": [ "<applet>$0</applet>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "area": {  "prefix": "area", "body": [ "<area>$0</area>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "article": {  "prefix": "article", "body": [ "<article>$0</article>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "aside": {  "prefix": "aside", "body": [ "<aside>$0</aside>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "audio": {  "prefix": "audio", "body": [ "<audio>$0</audio>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "b": {  "prefix": "b", "body": [ "<b>$0</b>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "base": {  "prefix": "base", "body": [ "<base>$0</base>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "basefont": {  "prefix": "basefont", "body": [ "<basefont>$0</basefont>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "bdi": {  "prefix": "bdi", "body": [ "<bdi>$0</bdi>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "bdo": {  "prefix": "bdo", "body": [ "<bdo>$0</bdo>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "big": {  "prefix": "big", "body": [ "<big>$0</big>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "blockquote": {  "prefix": "blockquote", "body": [ "<blockquote>$0</blockquote>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "body": {  "prefix": "body", "body": [ "<body>$0</body>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "br": {  "prefix": "br", "body": [ "<br>$0</br>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "button": {  "prefix": "button", "body": [ "<button>$0</button>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "canvas": {  "prefix": "canvas", "body": [ "<canvas>$0</canvas>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "caption": {  "prefix": "caption", "body": [ "<caption>$0</caption>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "center": {  "prefix": "center", "body": [ "<center>$0</center>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "cite": {  "prefix": "cite", "body": [ "<cite>$0</cite>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "code": {  "prefix": "code", "body": [ "<code>$0</code>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "col": {  "prefix": "col", "body": [ "<col>$0</col>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "colgroup": {  "prefix": "colgroup", "body": [ "<colgroup>$0</colgroup>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "data": {  "prefix": "data", "body": [ "<data>$0</data>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "datalist": {  "prefix": "datalist", "body": [ "<datalist>$0</datalist>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "dd": {  "prefix": "dd", "body": [ "<dd>$0</dd>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "del": {  "prefix": "del", "body": [ "<del>$0</del>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "details": {  "prefix": "details", "body": [ "<details>$0</details>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "dfn": {  "prefix": "dfn", "body": [ "<dfn>$0</dfn>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "dialog": {  "prefix": "dialog", "body": [ "<dialog>$0</dialog>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "dir": {  "prefix": "dir", "body": [ "<dir>$0</dir>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "div": {  "prefix": "div", "body": [ "<div>$0</div>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "dl": {  "prefix": "dl", "body": [ "<dl>$0</dl>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "dt": {  "prefix": "dt", "body": [ "<dt>$0</dt>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "em": {  "prefix": "em", "body": [ "<em>$0</em>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "embed": {  "prefix": "embed", "body": [ "<embed>$0</embed>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "fieldset": {  "prefix": "fieldset", "body": [ "<fieldset>$0</fieldset>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "figcaption": {  "prefix": "figcaption", "body": [ "<figcaption>$0</figcaption>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "figure": {  "prefix": "figure", "body": [ "<figure>$0</figure>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "font": {  "prefix": "font", "body": [ "<font>$0</font>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "footer": {  "prefix": "footer", "body": [ "<footer>$0</footer>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "form": {  "prefix": "form", "body": [ "<form>$0</form>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "frame": {  "prefix": "frame", "body": [ "<frame>$0</frame>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "frameset": {  "prefix": "frameset", "body": [ "<frameset>$0</frameset>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "h1": {  "prefix": "h1", "body": [ "<h1>$0</h1>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "h2": {  "prefix": "h2", "body": [ "<h2>$0</h2>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "h3": {  "prefix": "h3", "body": [ "<h3>$0</h3>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "h4": {  "prefix": "h4", "body": [ "<h4>$0</h4>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "h5": {  "prefix": "h5", "body": [ "<h5>$0</h5>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "h6": {  "prefix": "h6", "body": [ "<h6>$0</h6>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "head": {  "prefix": "head", "body": [ "<head>$0</head>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "header": {  "prefix": "header", "body": [ "<header>$0</header>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "hr": {  "prefix": "hr", "body": [ "<hr>$0</hr>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "html": {  "prefix": "html", "body": [ "<html>$0</html>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "i": {  "prefix": "i", "body": [ "<i>$0</i>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "iframe": {  "prefix": "iframe", "body": [ "<iframe>$0</iframe>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "img": {  "prefix": "img", "body": [ "<img>$0</img>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "input": {  "prefix": "input", "body": [ "<input>$0</input>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "ins": {  "prefix": "ins", "body": [ "<ins>$0</ins>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "kbd": {  "prefix": "kbd", "body": [ "<kbd>$0</kbd>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "label": {  "prefix": "label", "body": [ "<label>$0</label>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "legend": {  "prefix": "legend", "body": [ "<legend>$0</legend>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "li": {  "prefix": "li", "body": [ "<li>$0</li>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "link": {  "prefix": "link", "body": [ "<link>$0</link>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "main": {  "prefix": "main", "body": [ "<main>$0</main>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "map": {  "prefix": "map", "body": [ "<map>$0</map>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "mark": {  "prefix": "mark", "body": [ "<mark>$0</mark>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "meta": {  "prefix": "meta", "body": [ "<meta>$0</meta>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "meter": {  "prefix": "meter", "body": [ "<meter>$0</meter>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "nav": {  "prefix": "nav", "body": [ "<nav>$0</nav>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "noframes": {  "prefix": "noframes", "body": [ "<noframes>$0</noframes>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "noscript": {  "prefix": "noscript", "body": [ "<noscript>$0</noscript>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "object": {  "prefix": "object", "body": [ "<object>$0</object>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "ol": {  "prefix": "ol", "body": [ "<ol>$0</ol>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "optgroup": {  "prefix": "optgroup", "body": [ "<optgroup>$0</optgroup>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "option": {  "prefix": "option", "body": [ "<option>$0</option>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "output": {  "prefix": "output", "body": [ "<output>$0</output>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "p": {  "prefix": "p", "body": [ "<p>$0</p>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "param": {  "prefix": "param", "body": [ "<param>$0</param>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "picture": {  "prefix": "picture", "body": [ "<picture>$0</picture>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "pre": {  "prefix": "pre", "body": [ "<pre>$0</pre>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "progress": {  "prefix": "progress", "body": [ "<progress>$0</progress>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "q": {  "prefix": "q", "body": [ "<q>$0</q>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "rp": {  "prefix": "rp", "body": [ "<rp>$0</rp>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "rt": {  "prefix": "rt", "body": [ "<rt>$0</rt>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "ruby": {  "prefix": "ruby", "body": [ "<ruby>$0</ruby>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "s": {  "prefix": "s", "body": [ "<s>$0</s>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "samp": {  "prefix": "samp", "body": [ "<samp>$0</samp>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "script": {  "prefix": "script", "body": [ "<script>$0</script>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "section": {  "prefix": "section", "body": [ "<section>$0</section>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "select": {  "prefix": "select", "body": [ "<select>$0</select>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "small": {  "prefix": "small", "body": [ "<small>$0</small>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "source": {  "prefix": "source", "body": [ "<source>$0</source>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "span": {  "prefix": "span", "body": [ "<span>$0</span>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "strike": {  "prefix": "strike", "body": [ "<strike>$0</strike>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "strong": {  "prefix": "strong", "body": [ "<strong>$0</strong>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' // "style": {  "prefix": "style", "body": [ "<style>$0</style>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "sub": {  "prefix": "sub", "body": [ "<sub>$0</sub>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "summary": {  "prefix": "summary", "body": [ "<summary>$0</summary>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "sup": {  "prefix": "sup", "body": [ "<sup>$0</sup>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "table": {  "prefix": "table", "body": [ "<table>$0</table>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "tbody": {  "prefix": "tbody", "body": [ "<tbody>$0</tbody>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "td": {  "prefix": "td", "body": [ "<td>$0</td>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "template": {  "prefix": "template", "body": [ "<template>$0</template>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "textarea": {  "prefix": "textarea", "body": [ "<textarea>$0</textarea>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "tfoot": {  "prefix": "tfoot", "body": [ "<tfoot>$0</tfoot>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "th": {  "prefix": "th", "body": [ "<th>$0</th>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "thead": {  "prefix": "thead", "body": [ "<thead>$0</thead>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "time": {  "prefix": "time", "body": [ "<time>$0</time>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "title": {  "prefix": "title", "body": [ "<title>$0</title>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "tr": {  "prefix": "tr", "body": [ "<tr>$0</tr>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "track": {  "prefix": "track", "body": [ "<track>$0</track>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "tt": {  "prefix": "tt", "body": [ "<tt>$0</tt>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "u": {  "prefix": "u", "body": [ "<u>$0</u>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "ul": {  "prefix": "ul", "body": [ "<ul>$0</ul>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "var": {  "prefix": "var", "body": [ "<var>$0</var>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "video": {  "prefix": "video", "body": [ "<video>$0</video>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "wbr": {  "prefix": "wbr", "body": [ "<wbr>$0</wbr>" ], },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' // svg'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "svg":                 {  "prefix": "svg", "body": [ "<svg>$0</svg>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "animate":             {  "prefix": "animate", "body": [ "<animate>$0</animate>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "animateMotion":       {  "prefix": "animateMotion", "body": [ "<animateMotion>$0</animateMotion>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "animateTransform":    {  "prefix": "animateTransform", "body": [ "<animateTransform>$0</animateTransform>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "circle":              {  "prefix": "circle", "body": [ "<circle>$0</circle>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "clipPath":            {  "prefix": "clipPath", "body": [ "<clipPath>$0</clipPath>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "defs":                {  "prefix": "defs", "body": [ "<defs>$0</defs>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "desc":                {  "prefix": "desc", "body": [ "<desc>$0</desc>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "discard":             {  "prefix": "discard", "body": [ "<discard>$0</discard>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "ellipse":             {  "prefix": "ellipse", "body": [ "<ellipse>$0</ellipse>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feBlend":             {  "prefix": "feBlend", "body": [ "<feBlend>$0</feBlend>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feColorMatrix":       {  "prefix": "feColorMatrix", "body": [ "<feColorMatrix>$0</feColorMatrix>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feComponentTransfer": {  "prefix": "feComponentTransfer", "body": [ "<feComponentTransfer>$0</feComponentTransfer>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feComposite":         {  "prefix": "feComposite", "body": [ "<feComposite>$0</feComposite>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feConvolveMatrix":    {  "prefix": "feConvolveMatrix", "body": [ "<feConvolveMatrix>$0</feConvolveMatrix>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feDiffuseLighting":   {  "prefix": "feDiffuseLighting", "body": [ "<feDiffuseLighting>$0</feDiffuseLighting>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feDisplacementMap":   {  "prefix": "feDisplacementMap", "body": [ "<feDisplacementMap>$0</feDisplacementMap>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feDistantLight":      {  "prefix": "feDistantLight", "body": [ "<feDistantLight>$0</feDistantLight>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feDropShadow":        {  "prefix": "feDropShadow", "body": [ "<feDropShadow>$0</feDropShadow>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feFlood":             {  "prefix": "feFlood", "body": [ "<feFlood>$0</feFlood>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feFuncA":             {  "prefix": "feFuncA", "body": [ "<feFuncA>$0</feFuncA>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feFuncB":             {  "prefix": "feFuncB", "body": [ "<feFuncB>$0</feFuncB>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feFuncG":             {  "prefix": "feFuncG", "body": [ "<feFuncG>$0</feFuncG>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feFuncR":             {  "prefix": "feFuncR", "body": [ "<feFuncR>$0</feFuncR>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feGaussianBlur":      {  "prefix": "feGaussianBlur", "body": [ "<feGaussianBlur>$0</feGaussianBlur>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feImage":             {  "prefix": "feImage", "body": [ "<feImage>$0</feImage>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feMerge":             {  "prefix": "feMerge", "body": [ "<feMerge>$0</feMerge>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feMergeNode":         {  "prefix": "feMergeNode", "body": [ "<feMergeNode>$0</feMergeNode>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feMorphology":        {  "prefix": "feMorphology", "body": [ "<feMorphology>$0</feMorphology>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feOffset":            {  "prefix": "feOffset", "body": [ "<feOffset>$0</feOffset>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "fePointLight":        {  "prefix": "fePointLight", "body": [ "<fePointLight>$0</fePointLight>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feSpecularLighting":  {  "prefix": "feSpecularLighting", "body": [ "<feSpecularLighting>$0</feSpecularLighting>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feSpotLight":         {  "prefix": "feSpotLight", "body": [ "<feSpotLight>$0</feSpotLight>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feTile":              {  "prefix": "feTile", "body": [ "<feTile>$0</feTile>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "feTurbulence":        {  "prefix": "feTurbulence", "body": [ "<feTurbulence>$0</feTurbulence>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "filter":              {  "prefix": "filter", "body": [ "<filter>$0</filter>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "foreignObject":       {  "prefix": "foreignObject", "body": [ "<foreignObject>$0</foreignObject>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "g":                   {  "prefix": "g", "body": [ "<g>$0</g>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "hatch":               {  "prefix": "hatch", "body": [ "<hatch>$0</hatch>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "hatchpath":           {  "prefix": "hatchpath", "body": [ "<hatchpath>$0</hatchpath>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "image":               {  "prefix": "image", "body": [ "<image>$0</image>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "line":                {  "prefix": "line", "body": [ "<line>$0</line>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "linearGradient":      {  "prefix": "linearGradient", "body": [ "<linearGradient>$0</linearGradient>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "marker":              {  "prefix": "marker", "body": [ "<marker>$0</marker>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "mask":                {  "prefix": "mask", "body": [ "<mask>$0</mask>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "mesh":                {  "prefix": "mesh", "body": [ "<mesh>$0</mesh>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "meshgradient":        {  "prefix": "meshgradient", "body": [ "<meshgradient>$0</meshgradient>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "meshpatch":           {  "prefix": "meshpatch", "body": [ "<meshpatch>$0</meshpatch>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "meshrow":             {  "prefix": "meshrow", "body": [ "<meshrow>$0</meshrow>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "metadata":            {  "prefix": "metadata", "body": [ "<metadata>$0</metadata>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "mpath":               {  "prefix": "mpath", "body": [ "<mpath>$0</mpath>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "path":                {  "prefix": "path", "body": [ "<path>$0</path>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "pattern":             {  "prefix": "pattern", "body": [ "<pattern>$0</pattern>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "polygon":             {  "prefix": "polygon", "body": [ "<polygon>$0</polygon>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "polyline":            {  "prefix": "polyline", "body": [ "<polyline>$0</polyline>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "radialGradient":      {  "prefix": "radialGradient", "body": [ "<radialGradient>$0</radialGradient>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "rect":                {  "prefix": "rect", "body": [ "<rect>$0</rect>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "set":                 {  "prefix": "set", "body": [ "<set>$0</set>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "stop":                {  "prefix": "stop", "body": [ "<stop>$0</stop>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "switch":              {  "prefix": "switch", "body": [ "<switch>$0</switch>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "symbol":              {  "prefix": "symbol", "body": [ "<symbol>$0</symbol>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "text":                {  "prefix": "text", "body": [ "<text>$0</text>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "textPath":            {  "prefix": "textPath", "body": [ "<textPath>$0</textPath>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "tspan":               {  "prefix": "tspan", "body": [ "<tspan>$0</tspan>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "unknown":             {  "prefix": "unknown", "body": [ "<unknown>$0</unknown>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "use":                 {  "prefix": "use", "body": [ "<use>$0</use>"] },'
- source: //
  scopes:
    - punctuation.definition.comment.json.comments
- source: ' "view":                {  "prefix": "view", "body": [ "<view>$0</view>"] },'
  scopesEnd:
    - comment.line.double-slash.js
- source: '}'
  scopes:
    - punctuation.definition.dictionary.end.json.comments
