{
  "information_for_contributors": [
    "This file has been converted from https://github.com/microsoft/vscode-JSON.tmLanguage/blob/master/JSON.tmLanguage",
    "If you want to provide a fix or improvement, please create a pull request against the original repository.",
    "Once accepted there, we are happy to receive an update request."
  ],
  "version": "https://github.com/microsoft/vscode-JSON.tmLanguage/commit/9bd83f1c252b375e957203f21793316203f61f70",
  "name": "jsonc",
  "scopeName": "source.json.comments",
  "fileTypes": [
    ".jsonc",
    ".json"
  ],
  "patterns": [
    {
      "include": "#value"
    }
  ],
  "repository": {
    "any_potential_insertion": {
      "match": "(?:(?:((?:(?:(?:(\\$(?:(?:\\d+)|(?:[a-zA-Z0-9_]+)))|((\\$)(\\{)\\d+(\\|)(.+?)(\\|)(\\})))|((\\$)(\\{)\\w+((\\/).+?(\\/)(.+)(\\/)([igmyu]{0,5})(?=\\}))(\\})))|((\\$\\{)\\d+(:))((?:\\g<55>|((?<!\\\\)(?:\\\\\\\\\\\\\\\\)*\\\\\\\\\\})|[^\\\\\\n\\}\"]|(?:(?:\\\\\\\\\\\\\\\\)++)|(?:\\\\\\\\[^\\\\\\n\\}])|(?:(\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4}))(?<!\\\\)))*)(\\})))|((?:\\\\\\\\\\\\\\\\)*((?:(?:(?:(\\$(?:(?:\\d+)|(?:[a-zA-Z0-9_]+)))|((\\$)(\\{)\\d+(\\|)(.+?)(\\|)(\\})))|((\\$)(\\{)\\w+((\\/).+?(\\/)(.+)(\\/)([igmyu]{0,5})(?=\\}))(\\})))|((\\$\\{)\\d+(:))((?:\\g<55>|((?<!\\\\)(?:\\\\\\\\\\\\\\\\)*\\\\\\\\\\})|[^\\\\\\n\\}\"]|(?:(?:\\\\\\\\\\\\\\\\)++)|(?:\\\\\\\\[^\\\\\\n\\}])|(?:(\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4}))(?<!\\\\)))*)(\\}))))|(\\\\\\\\(?:\\\\\\\\\\\\\\\\)*((?:(?:(?:(\\$(?:(?:\\d+)|(?:[a-zA-Z0-9_]+)))|((\\$)(\\{)\\d+(\\|)(.+?)(\\|)(\\})))|((\\$)(\\{)\\w+((\\/).+?(\\/)(.+)(\\/)([igmyu]{0,5})(?=\\}))(\\})))|((\\$\\{)\\d+(:))((?:\\g<55>|((?<!\\\\)(?:\\\\\\\\\\\\\\\\)*\\\\\\\\\\})|[^\\\\\\n\\}\"]|(?:(?:\\\\\\\\\\\\\\\\)++)|(?:\\\\\\\\[^\\\\\\n\\}])|(?:(\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4}))(?<!\\\\)))*)(\\})))))|((?:\\\\\\\\)*\\$))",
      "captures": {
        "1": {
        },
        "2": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments"
        },
        "3": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments"
        },
        "4": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.dollar.json.comments support.class.insertion.json.comments"
        },
        "5": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "6": {
          "name": "meta.insertion.json.comments punctuation.separator.choice.json.comments"
        },
        "7": {
          "patterns": [
            {
              "match": ",",
              "name": "meta.insertion.json.comments punctuation.separator.comma.json.comments"
            },
            {
              "match": ".+?(?=,)",
              "name": "meta.insertion.json.comments constant.other.option.json.comments"
            },
            {
              "match": ".+?\\z",
              "name": "meta.insertion.json.comments constant.other.option.json.comments"
            }
          ]
        },
        "8": {
          "name": "meta.insertion.json.comments punctuation.separator.choice.json.comments"
        },
        "9": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "10": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments meta.variable-transform.json.comments"
        },
        "11": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.dollar.json.comments support.class.insertion.json.comments"
        },
        "12": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "13": {
          "name": "meta.insertion.json.comments string.regexp.json.comments"
        },
        "14": {
          "name": "meta.insertion.json.comments punctuation.section.regexp.json.comments"
        },
        "15": {
          "name": "meta.insertion.json.comments punctuation.section.regexp.json.comments"
        },
        "16": {
          "patterns": [
            {
              "match": "\\$\\d+",
              "name": "meta.insertion.json.comments variable.language.capture.json.comments"
            }
          ]
        },
        "17": {
          "name": "meta.insertion.json.comments punctuation.section.regexp.json.comments"
        },
        "18": {
          "name": "meta.insertion.json.comments keyword.other.flag.json.comments"
        },
        "19": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "20": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments"
        },
        "21": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "22": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "23": {
          "patterns": [
            {
              "include": "#naive_insertion_area"
            },
            {
              "include": "#null_quad_backslash"
            },
            {
              "include": "#dollar_sign_escape"
            },
            {
              "include": "#bracket_escape"
            },
            {
              "include": "#quad_backslash_match"
            },
            {
              "include": "#basic_escape"
            },
            {
              "include": "#invalid_escape"
            },
            {
              "include": "#normal_characters"
            }
          ]
        },
        "24": {
          "patterns": [
            {
              "include": "#quad_backslash_match"
            },
            {
              "match": "(\\\\\\\\)\\}",
              "captures": {
                "1": {
                  "name": "punctuation.section.insertion.escape.escaper.json.comments comment.block.json.comments punctuation.definition.comment.insertion.escape.json.comments"
                }
              },
              "name": "punctuation.section.insertion.escape.escapee.json.comments string.regexp.insertion.escape.json.comments"
            }
          ]
        },
        "25": {
          "name": "constant.character.escape.json.comments"
        },
        "26": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "27": {
          "patterns": [
            {
              "match": "((?:(?:(?:(\\$(?:(?:\\d+)|(?:[a-zA-Z0-9_]+)))|((\\$)(\\{)\\d+(\\|)(.+?)(\\|)(\\})))|((\\$)(\\{)\\w+((\\/).+?(\\/)(.+)(\\/)([igmyu]{0,5})(?=\\}))(\\})))|((\\$\\{)\\d+(:))((?:\\g<1>|((?<!\\\\)(?:\\\\\\\\\\\\\\\\)*\\\\\\\\\\})|[^\\\\\\n\\}\"]|(?:(?:\\\\\\\\\\\\\\\\)++)|(?:\\\\\\\\[^\\\\\\n\\}])|(?:(\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4}))(?<!\\\\)))*)(\\})))",
              "captures": {
                "1": {
                },
                "2": {
                  "name": "meta.insertion.json.comments support.class.insertion.json.comments"
                },
                "3": {
                  "name": "meta.insertion.json.comments support.class.insertion.json.comments"
                },
                "4": {
                  "name": "meta.insertion.json.comments punctuation.section.insertion.dollar.json.comments support.class.insertion.json.comments"
                },
                "5": {
                  "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
                },
                "6": {
                  "name": "meta.insertion.json.comments punctuation.separator.choice.json.comments"
                },
                "7": {
                  "patterns": [
                    {
                      "match": ",",
                      "name": "meta.insertion.json.comments punctuation.separator.comma.json.comments"
                    },
                    {
                      "match": ".+?(?=,)",
                      "name": "meta.insertion.json.comments constant.other.option.json.comments"
                    },
                    {
                      "match": ".+?\\z",
                      "name": "meta.insertion.json.comments constant.other.option.json.comments"
                    }
                  ]
                },
                "8": {
                  "name": "meta.insertion.json.comments punctuation.separator.choice.json.comments"
                },
                "9": {
                  "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
                },
                "10": {
                  "name": "meta.insertion.json.comments support.class.insertion.json.comments meta.variable-transform.json.comments"
                },
                "11": {
                  "name": "meta.insertion.json.comments punctuation.section.insertion.dollar.json.comments support.class.insertion.json.comments"
                },
                "12": {
                  "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
                },
                "13": {
                  "name": "meta.insertion.json.comments string.regexp.json.comments"
                },
                "14": {
                  "name": "meta.insertion.json.comments punctuation.section.regexp.json.comments"
                },
                "15": {
                  "name": "meta.insertion.json.comments punctuation.section.regexp.json.comments"
                },
                "16": {
                  "patterns": [
                    {
                      "match": "\\$\\d+",
                      "name": "meta.insertion.json.comments variable.language.capture.json.comments"
                    }
                  ]
                },
                "17": {
                  "name": "meta.insertion.json.comments punctuation.section.regexp.json.comments"
                },
                "18": {
                  "name": "meta.insertion.json.comments keyword.other.flag.json.comments"
                },
                "19": {
                  "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
                },
                "20": {
                  "name": "meta.insertion.json.comments support.class.insertion.json.comments"
                },
                "21": {
                  "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
                },
                "22": {
                  "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
                },
                "23": {
                  "patterns": [
                    {
                      "include": "#naive_insertion_area"
                    },
                    {
                      "include": "#null_quad_backslash"
                    },
                    {
                      "include": "#dollar_sign_escape"
                    },
                    {
                      "include": "#bracket_escape"
                    },
                    {
                      "include": "#quad_backslash_match"
                    },
                    {
                      "include": "#basic_escape"
                    },
                    {
                      "include": "#invalid_escape"
                    },
                    {
                      "include": "#normal_characters"
                    }
                  ]
                },
                "24": {
                  "patterns": [
                    {
                      "include": "#quad_backslash_match"
                    },
                    {
                      "match": "(\\\\\\\\)\\}",
                      "captures": {
                        "1": {
                          "name": "punctuation.section.insertion.escape.escaper.json.comments comment.block.json.comments punctuation.definition.comment.insertion.escape.json.comments"
                        }
                      },
                      "name": "punctuation.section.insertion.escape.escapee.json.comments string.regexp.insertion.escape.json.comments"
                    }
                  ]
                },
                "25": {
                  "name": "constant.character.escape.json.comments"
                },
                "26": {
                  "name": "meta.insertion.json.comments support.class.insertion.json.comments punctuation.section.insertion.json.comments"
                }
              }
            },
            {
              "include": "#quad_backslash_match"
            }
          ]
        },
        "28": {
        },
        "29": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments"
        },
        "30": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments"
        },
        "31": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.dollar.json.comments support.class.insertion.json.comments"
        },
        "32": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "33": {
          "name": "meta.insertion.json.comments punctuation.separator.choice.json.comments"
        },
        "34": {
          "patterns": [
            {
              "match": ",",
              "name": "meta.insertion.json.comments punctuation.separator.comma.json.comments"
            },
            {
              "match": ".+?(?=,)",
              "name": "meta.insertion.json.comments constant.other.option.json.comments"
            },
            {
              "match": ".+?\\z",
              "name": "meta.insertion.json.comments constant.other.option.json.comments"
            }
          ]
        },
        "35": {
          "name": "meta.insertion.json.comments punctuation.separator.choice.json.comments"
        },
        "36": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "37": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments meta.variable-transform.json.comments"
        },
        "38": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.dollar.json.comments support.class.insertion.json.comments"
        },
        "39": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "40": {
          "name": "meta.insertion.json.comments string.regexp.json.comments"
        },
        "41": {
          "name": "meta.insertion.json.comments punctuation.section.regexp.json.comments"
        },
        "42": {
          "name": "meta.insertion.json.comments punctuation.section.regexp.json.comments"
        },
        "43": {
          "patterns": [
            {
              "match": "\\$\\d+",
              "name": "meta.insertion.json.comments variable.language.capture.json.comments"
            }
          ]
        },
        "44": {
          "name": "meta.insertion.json.comments punctuation.section.regexp.json.comments"
        },
        "45": {
          "name": "meta.insertion.json.comments keyword.other.flag.json.comments"
        },
        "46": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "47": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments"
        },
        "48": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "49": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "50": {
          "patterns": [
            {
              "include": "#naive_insertion_area"
            },
            {
              "include": "#null_quad_backslash"
            },
            {
              "include": "#dollar_sign_escape"
            },
            {
              "include": "#bracket_escape"
            },
            {
              "include": "#quad_backslash_match"
            },
            {
              "include": "#basic_escape"
            },
            {
              "include": "#invalid_escape"
            },
            {
              "include": "#normal_characters"
            }
          ]
        },
        "51": {
          "patterns": [
            {
              "include": "#quad_backslash_match"
            },
            {
              "match": "(\\\\\\\\)\\}",
              "captures": {
                "1": {
                  "name": "punctuation.section.insertion.escape.escaper.json.comments comment.block.json.comments punctuation.definition.comment.insertion.escape.json.comments"
                }
              },
              "name": "punctuation.section.insertion.escape.escapee.json.comments string.regexp.insertion.escape.json.comments"
            }
          ]
        },
        "52": {
          "name": "constant.character.escape.json.comments"
        },
        "53": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "54": {
          "patterns": [
            {
              "include": "#null_quad_backslash"
            },
            {
              "include": "#dollar_sign_escape"
            },
            {
              "include": "#bracket_escape"
            },
            {
              "include": "#quad_backslash_match"
            },
            {
              "include": "#basic_escape"
            },
            {
              "include": "#invalid_escape"
            },
            {
              "include": "#normal_characters"
            }
          ]
        },
        "55": {
        },
        "56": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments"
        },
        "57": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments"
        },
        "58": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.dollar.json.comments support.class.insertion.json.comments"
        },
        "59": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "60": {
          "name": "meta.insertion.json.comments punctuation.separator.choice.json.comments"
        },
        "61": {
          "patterns": [
            {
              "match": ",",
              "name": "meta.insertion.json.comments punctuation.separator.comma.json.comments"
            },
            {
              "match": ".+?(?=,)",
              "name": "meta.insertion.json.comments constant.other.option.json.comments"
            },
            {
              "match": ".+?\\z",
              "name": "meta.insertion.json.comments constant.other.option.json.comments"
            }
          ]
        },
        "62": {
          "name": "meta.insertion.json.comments punctuation.separator.choice.json.comments"
        },
        "63": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "64": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments meta.variable-transform.json.comments"
        },
        "65": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.dollar.json.comments support.class.insertion.json.comments"
        },
        "66": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "67": {
          "name": "meta.insertion.json.comments string.regexp.json.comments"
        },
        "68": {
          "name": "meta.insertion.json.comments punctuation.section.regexp.json.comments"
        },
        "69": {
          "name": "meta.insertion.json.comments punctuation.section.regexp.json.comments"
        },
        "70": {
          "patterns": [
            {
              "match": "\\$\\d+",
              "name": "meta.insertion.json.comments variable.language.capture.json.comments"
            }
          ]
        },
        "71": {
          "name": "meta.insertion.json.comments punctuation.section.regexp.json.comments"
        },
        "72": {
          "name": "meta.insertion.json.comments keyword.other.flag.json.comments"
        },
        "73": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "74": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments"
        },
        "75": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "76": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "77": {
          "patterns": [
            {
              "include": "#naive_insertion_area"
            },
            {
              "include": "#null_quad_backslash"
            },
            {
              "include": "#dollar_sign_escape"
            },
            {
              "include": "#bracket_escape"
            },
            {
              "include": "#quad_backslash_match"
            },
            {
              "include": "#basic_escape"
            },
            {
              "include": "#invalid_escape"
            },
            {
              "include": "#normal_characters"
            }
          ]
        },
        "78": {
          "patterns": [
            {
              "include": "#quad_backslash_match"
            },
            {
              "match": "(\\\\\\\\)\\}",
              "captures": {
                "1": {
                  "name": "punctuation.section.insertion.escape.escaper.json.comments comment.block.json.comments punctuation.definition.comment.insertion.escape.json.comments"
                }
              },
              "name": "punctuation.section.insertion.escape.escapee.json.comments string.regexp.insertion.escape.json.comments"
            }
          ]
        },
        "79": {
          "name": "constant.character.escape.json.comments"
        },
        "80": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "81": {
          "patterns": [
            {
              "include": "#null_quad_backslash"
            },
            {
              "include": "#dollar_sign_escape"
            },
            {
              "include": "#bracket_escape"
            },
            {
              "include": "#quad_backslash_match"
            },
            {
              "include": "#basic_escape"
            },
            {
              "include": "#invalid_escape"
            },
            {
              "include": "#normal_characters"
            },
            {
              "match": "\\}",
              "name": "string.quoted.double.json.comments"
            }
          ]
        }
      }
    },
    "array": {
      "begin": "\\[",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.array.begin.json.comments"
        }
      },
      "end": "\\]",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.array.end.json.comments"
        }
      },
      "name": "meta.structure.array.json.comments",
      "patterns": [
        {
          "include": "#value"
        },
        {
          "match": ",",
          "name": "punctuation.separator.array.json.comments"
        },
        {
          "match": "[^\\s\\]]",
          "name": "invalid.illegal.expected-array-separator.json.comments"
        }
      ]
    },
    "basic_escape": {
      "match": "\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})",
      "name": "constant.character.escape.json.comments"
    },
    "body_array": {
      "begin": "\\[",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.array.begin.json.comments"
        }
      },
      "end": "\\]",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.array.end.json.comments"
        }
      },
      "name": "meta.structure.array.json.comments",
      "patterns": [
        {
          "include": "#body_value"
        },
        {
          "match": ",",
          "name": "punctuation.separator.array.json.comments"
        },
        {
          "match": "[^\\s\\]]",
          "name": "invalid.illegal.expected-array-separator.json.comments"
        }
      ]
    },
    "body_comments": {
      "patterns": [
        {
          "begin": "/\\*\\*(?!/)",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.json.comments"
            }
          },
          "end": "\\*/",
          "name": "comment.block.documentation.json.comments"
        },
        {
          "begin": "/\\*",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.json.comments"
            }
          },
          "end": "\\*/",
          "name": "comment.block.json.comments"
        },
        {
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.json.comments"
            }
          },
          "match": "(//).*$\\n?",
          "name": "comment.line.double-slash.js"
        }
      ]
    },
    "body_constant": {
      "match": "\\b(?:true|false|null)\\b",
      "name": "constant.language.json.comments"
    },
    "body_number": {
      "match": "(?x)        # turn on extended mode\n  -?        # an optional minus\n  (?:\n    0       # a zero\n    |       # ...or...\n    [1-9]   # a 1-9 character\n    \\d*     # followed by zero or more digits\n  )\n  (?:\n    (?:\n      \\.    # a period\n      \\d+   # followed by one or more digits\n    )?\n    (?:\n      [eE]  # an e character\n      [+-]? # followed by an option +/-\n      \\d+   # followed by one or more digits\n    )?      # make exponent optional\n  )?        # make decimal portion optional",
      "name": "constant.numeric.json.comments"
    },
    "body_object": {
      "begin": "\\{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.dictionary.begin.json.comments"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.dictionary.end.json.comments"
        }
      },
      "name": "meta.structure.dictionary.json.comments",
      "patterns": [
        {
          "comment": "the JSON object key",
          "include": "#special_object_key"
        },
        {
          "comment": "the JSON object key",
          "include": "#body_objectkey"
        },
        {
          "include": "#body_comments"
        },
        {
          "begin": ":",
          "beginCaptures": {
            "0": {
              "name": "punctuation.separator.dictionary.key-value.json.comments"
            }
          },
          "end": "(,)|(?=\\})",
          "endCaptures": {
            "1": {
              "name": "punctuation.separator.dictionary.pair.json.comments"
            }
          },
          "name": "meta.structure.dictionary.value.json.comments",
          "patterns": [
            {
              "comment": "the JSON object value",
              "include": "#body_value"
            },
            {
              "match": "[^\\s,]",
              "name": "invalid.illegal.expected-dictionary-separator.json.comments"
            }
          ]
        },
        {
          "match": "[^\\s\\}]",
          "name": "invalid.illegal.expected-dictionary-separator.json.comments"
        }
      ]
    },
    "body_objectkey": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.support.type.property-name.begin.json.comments"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.support.type.property-name.end.json.comments"
        }
      },
      "name": "string.json.comments support.type.property-name.json.comments",
      "patterns": [
        {
          "include": "#body_string_key_content"
        }
      ]
    },
    "body_string": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.json.comments"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.json.comments"
        }
      },
      "name": "string.quoted.double.json.comments",
      "patterns": [
        {
          "include": "#body_stringcontent"
        }
      ]
    },
    "body_stringcontent": {
      "patterns": [
        {
          "include": "#any_potential_insertion"
        },
        {
          "include": "#null_quad_backslash"
        },
        {
          "include": "#dollar_sign_escape"
        },
        {
          "include": "#bracket_escape"
        },
        {
          "include": "#quad_backslash_match"
        },
        {
          "include": "#basic_escape"
        },
        {
          "include": "#invalid_escape"
        },
        {
          "include": "#normal_characters"
        }
      ]
    },
    "body_value": {
      "patterns": [
        {
          "include": "#body_constant"
        },
        {
          "include": "#body_number"
        },
        {
          "include": "#body_string"
        },
        {
          "include": "#body_array"
        },
        {
          "include": "#body_object"
        },
        {
          "include": "#body_comments"
        }
      ]
    },
    "bracket_escape": {
      "match": "(?<!\\\\)(?:\\\\\\\\\\\\\\\\)*\\\\\\\\\\}",
      "captures": {
        "0": {
          "patterns": [
            {
              "include": "#quad_backslash_match"
            },
            {
              "match": "(\\\\\\\\)\\}",
              "captures": {
                "1": {
                  "name": "punctuation.section.insertion.escape.escaper.json.comments comment.block.json.comments punctuation.definition.comment.insertion.escape.json.comments"
                }
              },
              "name": "punctuation.section.insertion.escape.escapee.json.comments string.regexp.insertion.escape.json.comments"
            }
          ]
        }
      }
    },
    "comments": {
      "patterns": [
        {
          "begin": "/\\*\\*(?!/)",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.json.comments"
            }
          },
          "end": "\\*/",
          "name": "comment.block.documentation.json.comments"
        },
        {
          "begin": "/\\*",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.json.comments"
            }
          },
          "end": "\\*/",
          "name": "comment.block.json.comments"
        },
        {
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.json.comments"
            }
          },
          "match": "(//).*$\\n?",
          "name": "comment.line.double-slash.js"
        }
      ]
    },
    "constant": {
      "match": "\\b(?:true|false|null)\\b",
      "name": "constant.language.json.comments"
    },
    "dollar_sign_escape": {
      "match": "(?<!\\\\)(?:\\\\\\\\\\\\\\\\)*\\\\\\\\\\$",
      "captures": {
        "0": {
          "patterns": [
            {
              "include": "#quad_backslash_match"
            },
            {
              "match": "(\\\\\\\\)\\$",
              "captures": {
                "1": {
                  "name": "punctuation.section.insertion.escape.escaper.json.comments comment.block.json.comments punctuation.definition.comment.insertion.escape.json.comments"
                }
              },
              "name": "punctuation.section.insertion.escape.escapee.json.comments string.regexp.insertion.escape.json.comments"
            }
          ]
        }
      }
    },
    "invalid_escape": {
      "match": "\\\\\\\\.",
      "name": "invalid.illegal.unrecognized-string-escape.json.comments"
    },
    "naive_insertion_area": {
      "match": "((?:(?:(?:(\\$(?:(?:\\d+)|(?:[a-zA-Z0-9_]+)))|((\\$)(\\{)\\d+(\\|)(.+?)(\\|)(\\})))|((\\$)(\\{)\\w+((\\/).+?(\\/)(.+)(\\/)([igmyu]{0,5})(?=\\}))(\\})))|((\\$\\{)\\d+(:))((?:\\g<1>|((?<!\\\\)(?:\\\\\\\\\\\\\\\\)*\\\\\\\\\\})|[^\\\\\\n\\}\"]|(?:(?:\\\\\\\\\\\\\\\\)++)|(?:\\\\\\\\[^\\\\\\n\\}])|(?:(\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4}))(?<!\\\\)))*)(\\})))",
      "captures": {
        "1": {
        },
        "2": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments"
        },
        "3": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments"
        },
        "4": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.dollar.json.comments support.class.insertion.json.comments"
        },
        "5": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "6": {
          "name": "meta.insertion.json.comments punctuation.separator.choice.json.comments"
        },
        "7": {
          "patterns": [
            {
              "match": ",",
              "name": "meta.insertion.json.comments punctuation.separator.comma.json.comments"
            },
            {
              "match": ".+?(?=,)",
              "name": "meta.insertion.json.comments constant.other.option.json.comments"
            },
            {
              "match": ".+?\\z",
              "name": "meta.insertion.json.comments constant.other.option.json.comments"
            }
          ]
        },
        "8": {
          "name": "meta.insertion.json.comments punctuation.separator.choice.json.comments"
        },
        "9": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "10": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments meta.variable-transform.json.comments"
        },
        "11": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.dollar.json.comments support.class.insertion.json.comments"
        },
        "12": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "13": {
          "name": "meta.insertion.json.comments string.regexp.json.comments"
        },
        "14": {
          "name": "meta.insertion.json.comments punctuation.section.regexp.json.comments"
        },
        "15": {
          "name": "meta.insertion.json.comments punctuation.section.regexp.json.comments"
        },
        "16": {
          "patterns": [
            {
              "match": "\\$\\d+",
              "name": "meta.insertion.json.comments variable.language.capture.json.comments"
            }
          ]
        },
        "17": {
          "name": "meta.insertion.json.comments punctuation.section.regexp.json.comments"
        },
        "18": {
          "name": "meta.insertion.json.comments keyword.other.flag.json.comments"
        },
        "19": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "20": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments"
        },
        "21": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "22": {
          "name": "meta.insertion.json.comments punctuation.section.insertion.json.comments"
        },
        "23": {
          "patterns": [
            {
              "include": "#naive_insertion_area"
            },
            {
              "include": "#null_quad_backslash"
            },
            {
              "include": "#dollar_sign_escape"
            },
            {
              "include": "#bracket_escape"
            },
            {
              "include": "#quad_backslash_match"
            },
            {
              "include": "#basic_escape"
            },
            {
              "include": "#invalid_escape"
            },
            {
              "include": "#normal_characters"
            }
          ]
        },
        "24": {
          "patterns": [
            {
              "include": "#quad_backslash_match"
            },
            {
              "match": "(\\\\\\\\)\\}",
              "captures": {
                "1": {
                  "name": "punctuation.section.insertion.escape.escaper.json.comments comment.block.json.comments punctuation.definition.comment.insertion.escape.json.comments"
                }
              },
              "name": "punctuation.section.insertion.escape.escapee.json.comments string.regexp.insertion.escape.json.comments"
            }
          ]
        },
        "25": {
          "name": "constant.character.escape.json.comments"
        },
        "26": {
          "name": "meta.insertion.json.comments support.class.insertion.json.comments punctuation.section.insertion.json.comments"
        }
      }
    },
    "normal_characters": {
      "match": "[^\\\\\\n\\}\"]",
      "name": "string.quoted.double.json.comments"
    },
    "null_quad_backslash": {
      "match": "((?!\\\\)(?:(?:\\\\\\\\(?:\\\\\\\\\\\\\\\\)*(?:[^\\{\\$\"\\\\]|(?=\")))|(?:(?:\\\\\\\\\\\\\\\\)+(?:[^\\{\\$\"\\\\]|(?=\")))))",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#quad_backslash_match"
            },
            {
              "include": "#dollar_sign_escape"
            },
            {
              "include": "#bracket_escape"
            },
            {
              "include": "#basic_escape"
            },
            {
              "include": "#invalid_escape"
            },
            {
              "include": "#normal_characters"
            }
          ]
        }
      }
    },
    "number": {
      "match": "(?x)        # turn on extended mode\n  -?        # an optional minus\n  (?:\n    0       # a zero\n    |       # ...or...\n    [1-9]   # a 1-9 character\n    \\d*     # followed by zero or more digits\n  )\n  (?:\n    (?:\n      \\.    # a period\n      \\d+   # followed by one or more digits\n    )?\n    (?:\n      [eE]  # an e character\n      [+-]? # followed by an option +/-\n      \\d+   # followed by one or more digits\n    )?      # make exponent optional\n  )?        # make decimal portion optional",
      "name": "constant.numeric.json.comments"
    },
    "object": {
      "begin": "\\{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.dictionary.begin.json.comments"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.dictionary.end.json.comments"
        }
      },
      "name": "meta.structure.dictionary.json.comments",
      "patterns": [
        {
          "comment": "the JSON object key",
          "include": "#special_object_key"
        },
        {
          "comment": "the JSON object key",
          "include": "#objectkey"
        },
        {
          "include": "#comments"
        },
        {
          "begin": ":",
          "beginCaptures": {
            "0": {
              "name": "punctuation.separator.dictionary.key-value.json.comments"
            }
          },
          "end": "(,)|(?=\\})",
          "endCaptures": {
            "1": {
              "name": "punctuation.separator.dictionary.pair.json.comments"
            }
          },
          "name": "meta.structure.dictionary.value.json.comments",
          "patterns": [
            {
              "comment": "the JSON object value",
              "include": "#value"
            },
            {
              "match": "[^\\s,]",
              "name": "invalid.illegal.expected-dictionary-separator.json.comments"
            }
          ]
        },
        {
          "match": "[^\\s\\}]",
          "name": "invalid.illegal.expected-dictionary-separator.json.comments"
        }
      ]
    },
    "objectkey": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.support.type.property-name.begin.json.comments"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.support.type.property-name.end.json.comments"
        }
      },
      "name": "string.json.comments support.type.property-name.json.comments",
      "patterns": [
        {
          "include": "#string_key_content"
        }
      ]
    },
    "quad_backslash_match": {
      "match": "(\\\\\\\\)(\\\\\\\\)",
      "captures": {
        "1": {
          "name": "punctuation.section.insertion.escape.escaper.json.comments comment.block.json.comments punctuation.definition.comment.insertion.escape.json.comments"
        },
        "2": {
          "name": "constant.character.escape.json.comments"
        }
      }
    },
    "special_object_key": {
      "begin": "(\")(body)(\")",
      "end": "(?:(?<=,)|(?=\\}))",
      "beginCaptures": {
        "1": {
          "name": "string.json.comments support.type.property-name.json.comments punctuation.support.type.property-name.begin.json.comments"
        },
        "2": {
          "name": "string.json.comments support.type.property-name.json.comments"
        },
        "3": {
          "name": "string.json.comments support.type.property-name.json.comments punctuation.support.type.property-name.begin.json.comments"
        }
      },
      "endCaptures": {
      },
      "patterns": [
        {
          "begin": "(:)",
          "end": "(?:(,)|(?=\\}))",
          "beginCaptures": {
            "1": {
              "name": "punctuation.separator.dictionary.key-value.json.comments"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.separator.dictionary.pair.json.comments"
            }
          },
          "name": "meta.structure.dictionary.value.json.comments",
          "patterns": [
            {
              "include": "#body_value"
            },
            {
              "match": "[^\\s,]",
              "name": "invalid.illegal.expected-dictionary-separator.json.comments"
            }
          ]
        }
      ]
    },
    "string": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.json.comments"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.json.comments"
        }
      },
      "name": "string.quoted.double.json.comments",
      "patterns": [
        {
          "include": "#stringcontent"
        }
      ]
    },
    "string_key_content": {
      "patterns": [
        {
          "include": "#basic_escape"
        },
        {
          "include": "#invalid_escape"
        }
      ]
    },
    "stringcontent": {
      "patterns": [
        {
          "include": "#basic_escape"
        },
        {
          "include": "#invalid_escape"
        }
      ]
    },
    "value": {
      "patterns": [
        {
          "include": "#constant"
        },
        {
          "include": "#number"
        },
        {
          "include": "#string"
        },
        {
          "include": "#array"
        },
        {
          "include": "#object"
        },
        {
          "include": "#comments"
        }
      ]
    }
  }
}